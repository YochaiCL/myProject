{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\premiumPages\\\\pages\\\\questionAnswerPremium\\\\QuestionAnswerPremium.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../layouts/pageLayout/PageLayout';\nimport Header from '../../../commonComponents/header/Header';\nimport style from './questionAnswerPremium.module.css';\nimport Button from '../../../commonComponents/button/Button';\n\n/**\r\n * Description - This class show all question from the users and this class answering those questions\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionAnswerPremium extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionAnswerData: [],\n      questions: [],\n      users: [],\n      showData: false,\n      answerText: '',\n      answerText2: '',\n      selectIndex: null,\n      showQuestionsNames: false,\n      questionIndex: null\n    };\n    this.handelClick = index => {\n      this.setState({\n        answerText2: this.state.questions[index].answerText\n      });\n      if (index >= this.state.questions.length) {\n        this.setState({\n          showData: true,\n          selectIndex: 0\n        });\n      } else {\n        this.setState({\n          showData: true,\n          selectIndex: index\n        });\n      }\n    };\n    this.handelClickQuestion = qA => {\n      this.setState({\n        questions: []\n      });\n      if (this.state.selectIndex) {\n        this.setState({\n          selectIndex: 0\n        });\n      }\n      let array = [];\n      for (let data of this.state.questionAnswerData) {\n        if (data.userEmail === qA) {\n          array.push(data);\n          this.setState(prevState => ({\n            showQuestionsNames: true\n          }));\n        }\n      }\n      this.setState({\n        questions: array\n      });\n    };\n  }\n  /**\r\n   * Description - This function get all the data from the server\r\n   */\n  async getQuestionAnswer() {\n    const response = await fetch('http://localhost:5000/premiumQuestionAnswer/getData', {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      }\n    });\n    const result = await response.json();\n    this.setState({\n      questionAnswerData: result\n    });\n    for (let user of result) {\n      if (!this.state.users.includes(user.userEmail)) {\n        this.state.users.push(user.userEmail);\n      }\n    }\n  }\n\n  /**\r\n   * Description - This function activate the getQuestionAnswer function when the page is uploaded\r\n   */\n  componentDidMount() {\n    this.getQuestionAnswer();\n  }\n\n  /**\r\n   * Description - This function show all the data by click on selected item\r\n   * @param {*} index  - Selected item\r\n   */\n\n  /**\r\n   * Description - This function update an answer to the selected question\r\n   * @param {*} e - Selected question\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    let dataToSend;\n    if (!this.state.questionAnswerData[this.state.selectIndex].haveAnAnswer) {\n      dataToSend = {\n        userId: this.state.questionAnswerData[this.state.selectIndex].userId,\n        answerText: this.state.answerText,\n        questionName: this.state.questionAnswerData[this.state.selectIndex].questionName\n      };\n    } else {\n      dataToSend = {\n        userId: this.state.questionAnswerData[this.state.selectIndex].userId,\n        answerText: this.state.questionAnswerData[this.state.selectIndex].answerText + ' | ' + this.state.answerText,\n        questionName: this.state.questionAnswerData[this.state.selectIndex].questionName\n      };\n    }\n    const questionInputData = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(dataToSend)\n    };\n    const response = await fetch('http://localhost:5000/premiumQuestionAnswer/updateAnswer', questionInputData);\n    const result = await response.json();\n    if (result.status === 'true') {\n      this.setState({\n        answerText: this.state.answerText,\n        showResult: 'The Answer has been updated'\n      });\n      this.setState({\n        answerText2: this.state.questionAnswerData[this.state.selectIndex].answerText + ' | ' + this.state.answerText\n      });\n      setTimeout(() => {\n        this.setState({\n          showResult: ''\n        });\n      }, 2000);\n      this.getQuestionAnswer();\n    }\n  }\n\n  /**\r\n   * Description - This function check if the all question of the user get an answer\r\n   * @param {*} userEmail  - User data\r\n   * @returns - True if all question are answered and false otherwise\r\n   */\n  checkUserAllHaveAnswers(userEmail) {\n    let array = [];\n    for (let data of this.state.questionAnswerData) {\n      if (data.userEmail === userEmail) {\n        array.push(data);\n      }\n    }\n    return array.every(data => data.userEmail === userEmail && data.haveAnAnswer);\n  }\n  render() {\n    const {\n      showData,\n      selectIndex,\n      showQuestionsNames\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Question Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.external,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.model,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List Of Questions/Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), this.state.users.map((qA, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.handelClickQuestion(qA, index);\n              },\n              className: `${style.productButton} ${this.checkUserAllHaveAnswers(qA) ? style.greenBackground : style.redBackground}`,\n              children: qA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)), showQuestionsNames ? /*#__PURE__*/_jsxDEV(\"section\", {\n            className: style.questions,\n            children: this.state.questions.map((qA, index) => {\n              const hasAnswer = this.state.questionAnswerData.find(data => data._id === qA._id).haveAnAnswer;\n              return /*#__PURE__*/_jsxDEV(\"section\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${style.btn} ${hasAnswer ? style.greenBackground : style.redBackground}`,\n                  onClick: () => {\n                    this.handelClick(index);\n                  },\n                  children: qA.questionName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, qA._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), showData && selectIndex !== null && selectIndex < this.state.questions.length && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.showAllData,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: style.h2,\n            children: \"Question/Answer Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.h3,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.span,\n                children: \" Question Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), this.state.questions[selectIndex].questionDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.h3,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.span,\n                children: \" Question Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), this.state.questions[selectIndex].questionName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.h3,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.span,\n                children: \" Question Text:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), this.state.questions[selectIndex].questionText.split('?').map((part, index, array) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [part, index !== array.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.h3,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.span,\n                children: \"Question Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), this.state.answerText2.split('|').map((part, index, array) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [part, index !== array.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit.bind(this),\n                className: style.form,\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: style.textArea,\n                  value: this.state.answerText,\n                  name: \"tarea\",\n                  rows: \"6\",\n                  cols: \"40\",\n                  placeholder: \" Write text here\",\n                  required: true,\n                  onChange: e => this.setState({\n                    answerText: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  text: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.showResult,\n        children: this.state.showResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","Button","QuestionAnswerPremium","state","questionAnswerData","questions","users","showData","answerText","answerText2","selectIndex","showQuestionsNames","questionIndex","handelClick","index","setState","length","handelClickQuestion","qA","array","data","userEmail","push","prevState","getQuestionAnswer","response","fetch","method","crossDomain","headers","Accept","result","json","user","includes","componentDidMount","handleSubmit","e","preventDefault","dataToSend","haveAnAnswer","userId","questionName","questionInputData","body","JSON","stringify","status","showResult","setTimeout","checkUserAllHaveAnswers","every","render","external","model","map","productButton","greenBackground","redBackground","hasAnswer","find","_id","btn","showAllData","h2","h3","span","questionDate","questionText","split","part","color","bind","form","textArea","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/premiumPages/pages/questionAnswerPremium/QuestionAnswerPremium.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../commonComponents/header/Header';\r\nimport style from './questionAnswerPremium.module.css';\r\nimport Button from '../../../commonComponents/button/Button';\r\n\r\n/**\r\n * Description - This class show all question from the users and this class answering those questions\r\n */\r\nexport default class QuestionAnswerPremium extends Component {\r\n  state = {\r\n    questionAnswerData: [],\r\n    questions: [],\r\n    users: [],\r\n    showData: false,\r\n    answerText: '',\r\n    answerText2: '',\r\n    selectIndex: null,\r\n    showQuestionsNames: false,\r\n    questionIndex: null,\r\n  };\r\n\r\n  /**\r\n   * Description - This function get all the data from the server\r\n   */\r\n  async getQuestionAnswer() {\r\n    const response = await fetch(\r\n      'http://localhost:5000/premiumQuestionAnswer/getData',\r\n      {\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Accept-Control-Allow-Origin': '*',\r\n        },\r\n      }\r\n    );\r\n    const result = await response.json();\r\n    this.setState({ questionAnswerData: result });\r\n    for (let user of result) {\r\n      if (!this.state.users.includes(user.userEmail)) {\r\n        this.state.users.push(user.userEmail);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Description - This function activate the getQuestionAnswer function when the page is uploaded\r\n   */\r\n  componentDidMount() {\r\n    this.getQuestionAnswer();\r\n  }\r\n\r\n  /**\r\n   * Description - This function show all the data by click on selected item\r\n   * @param {*} index  - Selected item\r\n   */\r\n  handelClick = index => {\r\n    this.setState({\r\n      answerText2: this.state.questions[index].answerText,\r\n    });\r\n    if (index >= this.state.questions.length) {\r\n      this.setState({\r\n        showData: true,\r\n        selectIndex: 0,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showData: true,\r\n        selectIndex: index,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *Description  - This function show all the question of the selected user\r\n   * @param {*} qA - Selsected user\r\n   */\r\n  handelClickQuestion = qA => {\r\n    this.setState({ questions: [] });\r\n    if (this.state.selectIndex) {\r\n      this.setState({ selectIndex: 0 });\r\n    }\r\n    let array = [];\r\n    for (let data of this.state.questionAnswerData) {\r\n      if (data.userEmail === qA) {\r\n        array.push(data);\r\n        this.setState(prevState => ({\r\n          showQuestionsNames: true,\r\n        }));\r\n      }\r\n    }\r\n    this.setState({ questions: array });\r\n  };\r\n\r\n  /**\r\n   * Description - This function update an answer to the selected question\r\n   * @param {*} e - Selected question\r\n   */\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    let dataToSend;\r\n    if (!this.state.questionAnswerData[this.state.selectIndex].haveAnAnswer) {\r\n      dataToSend = {\r\n        userId: this.state.questionAnswerData[this.state.selectIndex].userId,\r\n        answerText: this.state.answerText,\r\n        questionName:\r\n          this.state.questionAnswerData[this.state.selectIndex].questionName,\r\n      };\r\n    } else {\r\n      dataToSend = {\r\n        userId: this.state.questionAnswerData[this.state.selectIndex].userId,\r\n        answerText:\r\n          this.state.questionAnswerData[this.state.selectIndex].answerText +\r\n          ' | ' +\r\n          this.state.answerText,\r\n        questionName:\r\n          this.state.questionAnswerData[this.state.selectIndex].questionName,\r\n      };\r\n    }\r\n    const questionInputData = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(dataToSend),\r\n    };\r\n\r\n    const response = await fetch(\r\n      'http://localhost:5000/premiumQuestionAnswer/updateAnswer',\r\n      questionInputData\r\n    );\r\n    const result = await response.json();\r\n    if (result.status === 'true') {\r\n      this.setState({\r\n        answerText: this.state.answerText,\r\n        showResult: 'The Answer has been updated',\r\n      });\r\n\r\n      this.setState({\r\n        answerText2:\r\n          this.state.questionAnswerData[this.state.selectIndex].answerText +\r\n          ' | ' +\r\n          this.state.answerText,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n        });\r\n      }, 2000);\r\n      this.getQuestionAnswer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Description - This function check if the all question of the user get an answer\r\n   * @param {*} userEmail  - User data\r\n   * @returns - True if all question are answered and false otherwise\r\n   */\r\n  checkUserAllHaveAnswers(userEmail) {\r\n    let array = [];\r\n     for (let data of this.state.questionAnswerData) {\r\n       if (data.userEmail === userEmail) {\r\n         array.push(data);\r\n       }\r\n     }\r\n    return array.every(\r\n      data => data.userEmail === userEmail && data.haveAnAnswer\r\n    );\r\n  }\r\n  render() {\r\n    const { showData, selectIndex, showQuestionsNames } = this.state;\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Question Answer' />\r\n        <section className={style.external}>\r\n          <section className={style.model}>\r\n            <h2>List Of Questions/Answers</h2>\r\n            {this.state.users.map((qA, index) => (\r\n              <section key={index}>\r\n                <button\r\n                  onClick={() => {\r\n                    this.handelClickQuestion(qA, index);\r\n                  }}\r\n                  className={`${style.productButton} ${\r\n                    this.checkUserAllHaveAnswers(qA)\r\n                      ? style.greenBackground\r\n                      : style.redBackground\r\n                  }`}\r\n                >\r\n                  {qA}\r\n                </button>\r\n              </section>\r\n            ))}\r\n\r\n            {showQuestionsNames ? (\r\n              <section className={style.questions}>\r\n                {this.state.questions.map((qA, index) => {\r\n                  const hasAnswer = this.state.questionAnswerData.find(\r\n                    data => data._id === qA._id\r\n                  ).haveAnAnswer;\r\n\r\n                  return (\r\n                    <section key={qA._id}>\r\n                      <button\r\n                        className={`${style.btn} ${\r\n                          hasAnswer\r\n                            ? style.greenBackground\r\n                            : style.redBackground\r\n                        }`}\r\n                        onClick={() => {\r\n                          this.handelClick(index);\r\n                        }}\r\n                      >\r\n                        {qA.questionName}\r\n                      </button>\r\n                    </section>\r\n                  );\r\n                })}\r\n              </section>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </section>\r\n\r\n          {showData &&\r\n            selectIndex !== null &&\r\n            selectIndex < this.state.questions.length && (\r\n              <section className={style.showAllData}>\r\n                <h2 className={style.h2}>Question/Answer Data</h2>\r\n                <div>\r\n                  <h3 className={style.h3}>\r\n                    <span className={style.span}> Question Date:</span>\r\n                    {this.state.questions[selectIndex].questionDate}\r\n                  </h3>\r\n                  <h3 className={style.h3}>\r\n                    <span className={style.span}> Question Name:</span>\r\n\r\n                    {this.state.questions[selectIndex].questionName}\r\n                  </h3>\r\n                  <h3 className={style.h3}>\r\n                    <span className={style.span}> Question Text:</span>\r\n                    {this.state.questions[selectIndex].questionText\r\n                      .split('?')\r\n                      .map((part, index, array) => (\r\n                        <span key={index}>\r\n                          {part}\r\n                          {index !== array.length - 1 && (\r\n                            <span style={{ color: 'red' }}>?</span>\r\n                          )}\r\n                        </span>\r\n                      ))}\r\n                  </h3>\r\n\r\n                  <h3 className={style.h3}>\r\n                    <span className={style.span}>Question Answer:</span>\r\n\r\n                    {this.state.answerText2\r\n                      .split('|')\r\n                      .map((part, index, array) => (\r\n                        <span key={index}>\r\n                          {part}\r\n                          {index !== array.length - 1 && (\r\n                            <span style={{ color: 'red' }}>|</span>\r\n                          )}\r\n                        </span>\r\n                      ))}\r\n                  </h3>\r\n\r\n                  <section>\r\n                    <form\r\n                      onSubmit={this.handleSubmit.bind(this)}\r\n                      className={style.form}\r\n                    >\r\n                      <textarea\r\n                        className={style.textArea}\r\n                        value={this.state.answerText}\r\n                        name='tarea'\r\n                        rows='6'\r\n                        cols='40'\r\n                        placeholder=' Write text here'\r\n                        required\r\n                        onChange={e =>\r\n                          this.setState({ answerText: e.target.value })\r\n                        }\r\n                      ></textarea>\r\n\r\n                      <Button type='submit' text='submit' />\r\n                    </form>\r\n                  </section>\r\n                </div>\r\n              </section>\r\n            )}\r\n        </section>\r\n        <p className={style.showResult}>{this.state.showResult}</p>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}