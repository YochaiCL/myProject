{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\delete\\\\deleteAssemblies\\\\DeleteAssemblies.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../pageSettings/header/Header';\nimport style from './deleteAssemblies.module.css';\nimport Button from '../../../../pageSettings/button/Button';\n\n/**\r\n * Description - This class delete selected assembly from the database\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DeleteAssemblies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      assembly: [{\n        assemblyName: 'Loading data...'\n      }],\n      deleteAssembly: '',\n      showResult: ''\n    };\n  }\n  /**\r\n   * Description - This function get all assemblies from the database and sort the array\r\n   */\n  async getAssembly() {\n    const response = await fetch('http://localhost:5000/getAssembly');\n    const result = await response.json();\n    // console.log(result);\n    result.sort((a, b) => a.assemblyName.localeCompare(b.assemblyName));\n    this.setState({\n      assembly: result\n    });\n  }\n\n  /**\r\n   * Description - This function activate the getAssembly when the page is uploaded\r\n   */\n  componentDidMount() {\n    this.getAssembly();\n  }\n\n  /**\r\n   * Description - This function delete selected assembly from the database\r\n   */\n  deleteAssembly() {\n    let result = this.state.assembly.filter(item => {\n      console.log(item, this.state.deleteAssembly);\n      return item.assemblyName !== this.state.deleteAssembly;\n    });\n    // console.log(result);\n    this.setState({\n      assembly: result\n    });\n    try {\n      fetch('http://localhost:5000/deleteAssemblies', {\n        // Setting headers for the HTTP request\n        method: 'POST',\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        // Converting fullName, email, password, and userType to JSON and setting it as the request body\n        body: JSON.stringify({\n          assemblyName: this.state.deleteAssembly\n        })\n      })\n      // Parsing the response as JSON\n      .then(res => res.json())\n      // Handling the response data\n      .then(data => {\n        if (data.status === 'Assembly deleted') {\n          this.setState({\n            showResult: 'Assembly have been deleted'\n          });\n          setTimeout(() => {\n            this.setState({\n              showResult: ''\n            });\n          }, 1000);\n          window.location.href = '/deleteAssemblies';\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Delete Assemblies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: style.select,\n        value: this.state.deleteAssembly,\n        label: \"Assemblies Name\",\n        onChange: e => this.setState({\n          deleteAssembly: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select an Assembly Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), this.state.assembly.map((itemAssembly, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: itemAssembly.assemblyName,\n          className: style.text,\n          children: itemAssembly.assemblyName\n        }, `${itemAssembly.assemblyName}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.btn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Delete\",\n          fun: () => this.deleteAssembly()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.showResult,\n        children: this.state.showResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","Button","DeleteAssemblies","state","assembly","assemblyName","deleteAssembly","showResult","getAssembly","response","fetch","result","json","sort","a","b","localeCompare","setState","componentDidMount","filter","item","console","log","method","crossDomain","headers","Accept","body","JSON","stringify","then","res","data","status","setTimeout","window","location","href","error","render","select","e","target","value","map","itemAssembly","index","text","btn"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/delete/deleteAssemblies/DeleteAssemblies.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../pageSettings/header/Header';\r\nimport style from './deleteAssemblies.module.css';\r\nimport Button from '../../../../pageSettings/button/Button';\r\n\r\n/**\r\n * Description - This class delete selected assembly from the database\r\n */\r\nexport default class DeleteAssemblies extends Component {\r\n  state = {\r\n    assembly: [{ assemblyName: 'Loading data...' }],\r\n    deleteAssembly: '',\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function get all assemblies from the database and sort the array\r\n   */\r\n  async getAssembly() {\r\n    const response = await fetch('http://localhost:5000/getAssembly');\r\n    const result = await response.json();\r\n    // console.log(result);\r\n    result.sort((a, b) => a.assemblyName.localeCompare(b.assemblyName));\r\n    this.setState({ assembly: result });\r\n  }\r\n\r\n  /**\r\n   * Description - This function activate the getAssembly when the page is uploaded\r\n   */\r\n  componentDidMount() {\r\n    this.getAssembly();\r\n  }\r\n\r\n  /**\r\n   * Description - This function delete selected assembly from the database\r\n   */\r\n  deleteAssembly() {\r\n    let result = this.state.assembly.filter(item => {\r\n      console.log(item, this.state.deleteAssembly);\r\n      return item.assemblyName !== this.state.deleteAssembly;\r\n    });\r\n    // console.log(result);\r\n    this.setState({ assembly: result });\r\n    try {\r\n      fetch('http://localhost:5000/deleteAssemblies', {\r\n        // Setting headers for the HTTP request\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        // Converting fullName, email, password, and userType to JSON and setting it as the request body\r\n        body: JSON.stringify({\r\n          assemblyName: this.state.deleteAssembly,\r\n        }),\r\n      })\r\n        // Parsing the response as JSON\r\n        .then(res => res.json())\r\n        // Handling the response data\r\n        .then(data => {\r\n          if (data.status === 'Assembly deleted') {\r\n            this.setState({ showResult: 'Assembly have been deleted' });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                showResult: '',\r\n              });\r\n            }, 1000);\r\n            window.location.href = '/deleteAssemblies';\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Delete Assemblies' />\r\n\r\n        <select\r\n          className={style.select}\r\n          value={this.state.deleteAssembly}\r\n          label='Assemblies Name'\r\n          onChange={e => this.setState({ deleteAssembly: e.target.value })}\r\n          required\r\n        >\r\n          <option value='' disabled>\r\n            Select an Assembly Name\r\n          </option>\r\n          {this.state.assembly.map((itemAssembly, index) => (\r\n            <option\r\n              // By combining the assemblyName and index in the key, you create a unique identifier for each option in the select element.\r\n              key={`${itemAssembly.assemblyName}-${index}`}\r\n              value={itemAssembly.assemblyName}\r\n              className={style.text}\r\n            >\r\n              {itemAssembly.assemblyName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className={style.btn}>\r\n          <Button text='Delete' fun={() => this.deleteAssembly()} />\r\n        </div>\r\n        <p className={style.showResult}>{this.state.showResult}</p>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}