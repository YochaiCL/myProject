{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\update\\\\updateComponents\\\\updateCpuCooler\\\\UpdateCpuCoolerLiquid\\\\UpdateCpuCoolerLiquid.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../../../../pageSettings/button/Button';\nimport PageLayout from '../../../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../../../pageSettings/header/Header';\nimport style from '../../updateMotherboard/updateMotherboard.module.css';\n\n/**\r\n * Description - This class update the component data by the user inputs\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UpdateCpuCoolerLiquid extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [{\n        model: 'Loading data...'\n      }],\n      showData: false,\n      selectIndex: null,\n      model: '',\n      socket_support: '',\n      radiator_size: '',\n      showResult: ''\n    };\n    this.handelClick = index => {\n      this.setState({\n        showData: true,\n        selectIndex: index,\n        model: this.state.products[index],\n        socket_support: this.state.products[index],\n        radiator_size: this.state.products[index]\n      });\n    };\n  }\n  /**\r\n   * Description - This function activate the getProducts function when the wab is upload\r\n   */\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  /**\r\n   * Description - This function set the value of the inputs when we click on the selected component and show his data\r\n   * @param {*} index - Selected component\r\n   */\n\n  async getProducts() {\n    const response = await fetch('http://localhost:5000/getComponent/cpuCoolerLiquid');\n    const result = await response.json();\n    console.log(result);\n    this.setState({\n      products: result\n    });\n  }\n\n  // Asynchronous function to handle form submission\n  async handleSubmit(e) {\n    // Preventing the default form submission behavior\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        // Setting headers for the HTTP request\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      // Converting the state object to JSON and setting it as the request body\n      body: JSON.stringify(this.state)\n    };\n    // Sending the POST request with options\n    const response = await fetch('http://localhost:5000/addComponent/cpuCoolerLiquid', options);\n    // Parsing the response as JSON\n    const result = await response.json();\n\n    // Checking the status of the response\n\n    // Updating the state to display a success message\n    if (result.status === 'ok') {\n      this.setState({\n        showResult: 'Component have added'\n      });\n    } // Handling different response statuses\n    else if (result.status === 'Model already exist') {\n      this.setState({\n        showResult: 'Component already exist'\n      });\n    } else if (result.status === 'Error !! check your details') {}\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Update Cpu Cooler Liquid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.external,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.model,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List Of Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), this.state.products.map((product, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.handelClick(index);\n              },\n              className: style.productButton,\n              children: product.model\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), this.state.showData && this.state.selectIndex !== null && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.showAllData,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: style.h2,\n            children: \"Product Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit.bind(this),\n                className: `${style.form} ${style.smallForm}`,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: this.state.products[this.state.selectIndex].model,\n                  value: this.state.model,\n                  required: true,\n                  onChange: e => this.setState({\n                    model: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: this.state.products[this.state.selectIndex].socket_support,\n                  required: true,\n                  onChange: e => this.setState({\n                    socket_support: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: this.state.products[this.state.selectIndex].radiator_size,\n                  required: true,\n                  onChange: e => this.setState({\n                    radiator_size: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  text: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.showResult\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","PageLayout","Header","style","UpdateCpuCoolerLiquid","state","products","model","showData","selectIndex","socket_support","radiator_size","showResult","handelClick","index","setState","componentDidMount","getProducts","response","fetch","result","json","console","log","handleSubmit","e","preventDefault","options","method","crossDomain","headers","Accept","body","JSON","stringify","status","render","external","map","product","productButton","showAllData","h2","bind","form","smallForm","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/update/updateComponents/updateCpuCooler/UpdateCpuCoolerLiquid/UpdateCpuCoolerLiquid.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../../../../../pageSettings/button/Button';\r\nimport PageLayout from '../../../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../../../pageSettings/header/Header';\r\nimport style from '../../updateMotherboard/updateMotherboard.module.css';\r\n\r\n/**\r\n * Description - This class update the component data by the user inputs\r\n */\r\nexport default class UpdateCpuCoolerLiquid extends Component {\r\n  state = {\r\n    products: [{ model: 'Loading data...' }],\r\n    showData: false,\r\n    selectIndex: null,\r\n    model: '',\r\n    socket_support: '',\r\n    radiator_size: '',\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function activate the getProducts function when the wab is upload\r\n   */\r\n  componentDidMount() {\r\n    this.getProducts();\r\n  }\r\n\r\n  /**\r\n   * Description - This function set the value of the inputs when we click on the selected component and show his data\r\n   * @param {*} index - Selected component\r\n   */\r\n  handelClick = index => {\r\n    this.setState({\r\n      showData: true,\r\n      selectIndex: index,\r\n      model: this.state.products[index],\r\n      socket_support: this.state.products[index],\r\n      radiator_size: this.state.products[index],\r\n    });\r\n  };\r\n  async getProducts() {\r\n    const response = await fetch(\r\n      'http://localhost:5000/getComponent/cpuCoolerLiquid'\r\n    );\r\n    const result = await response.json();\r\n    console.log(result);\r\n    this.setState({ products: result });\r\n  }\r\n\r\n  // Asynchronous function to handle form submission\r\n  async handleSubmit(e) {\r\n    // Preventing the default form submission behavior\r\n    e.preventDefault();\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        // Setting headers for the HTTP request\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      // Converting the state object to JSON and setting it as the request body\r\n      body: JSON.stringify(this.state),\r\n    };\r\n    // Sending the POST request with options\r\n    const response = await fetch(\r\n      'http://localhost:5000/addComponent/cpuCoolerLiquid',\r\n      options\r\n    );\r\n    // Parsing the response as JSON\r\n    const result = await response.json();\r\n\r\n    // Checking the status of the response\r\n\r\n    // Updating the state to display a success message\r\n    if (result.status === 'ok') {\r\n      this.setState({ showResult: 'Component have added' });\r\n    } // Handling different response statuses\r\n    else if (result.status === 'Model already exist') {\r\n      this.setState({ showResult: 'Component already exist' });\r\n    } else if (result.status === 'Error !! check your details') {\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Update Cpu Cooler Liquid' />\r\n        <section className={style.external}>\r\n          <section className={style.model}>\r\n            <h2>List Of Products</h2>\r\n            {this.state.products.map((product, index) => (\r\n              <section key={index}>\r\n                <button\r\n                  onClick={() => {\r\n                    this.handelClick(index);\r\n                  }}\r\n                  className={style.productButton}\r\n                >\r\n                  {product.model}\r\n                </button>\r\n              </section>\r\n            ))}\r\n          </section>\r\n          {this.state.showData && this.state.selectIndex !== null && (\r\n            <section className={style.showAllData}>\r\n              <h2 className={style.h2}>Product Data</h2>\r\n              <div>\r\n                <section>\r\n                  <form\r\n                    onSubmit={this.handleSubmit.bind(this)}\r\n                    className={`${style.form} ${style.smallForm}`}\r\n                  >\r\n                    <input\r\n                      type='text'\r\n                      placeholder={\r\n                        this.state.products[this.state.selectIndex].model\r\n                      }\r\n                      value={this.state.model}\r\n                      required\r\n                      onChange={e => this.setState({ model: e.target.value })}\r\n                    />\r\n\r\n                    <input\r\n                      type='text'\r\n                      placeholder={\r\n                        this.state.products[this.state.selectIndex]\r\n                          .socket_support\r\n                      }\r\n                      required\r\n                      onChange={e =>\r\n                        this.setState({ socket_support: e.target.value })\r\n                      }\r\n                    />\r\n\r\n                    <input\r\n                      type='text'\r\n                      placeholder={\r\n                        this.state.products[this.state.selectIndex]\r\n                          .radiator_size\r\n                      }\r\n                      required\r\n                      onChange={e =>\r\n                        this.setState({\r\n                          radiator_size: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n\r\n                    <Button type='submit' text='submit' />\r\n                    <p>{this.state.showResult}</p>\r\n                  </form>\r\n                </section>\r\n              </div>\r\n            </section>\r\n          )}\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}