{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\premiumPages\\\\pages\\\\questionAnswerPremium\\\\QuestionAnswerPremium.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../layouts/pageLayout/PageLayout';\nimport Header from '../../../commonComponents/header/Header';\nimport style from './questionAnswerPremium.module.css';\nimport Button from '../../../commonComponents/button/Button';\n\n/**\r\n * Description - This class show all question from the users and this class answering those questions\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionAnswerPremium extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionAnswerData: [],\n      questions: [],\n      messages: [],\n      users: [],\n      showData: false,\n      answerText: '',\n      selectIndex: null,\n      showQuestionsNames: false,\n      questionIndex: null\n    };\n    this.handelClick = index => {\n      if (index >= this.state.questions.length) {\n        this.setState({\n          showData: true,\n          selectIndex: 0,\n          messages: this.state.questions[0].questionAnswerText\n        });\n      } else {\n        this.setState({\n          showData: true,\n          selectIndex: index,\n          messages: this.state.questions[index].questionAnswerText\n        });\n      }\n    };\n    this.handelClickQuestion = qA => {\n      this.setState({\n        questions: []\n      });\n      if (this.state.selectIndex) {\n        this.setState({\n          selectIndex: 0\n        });\n      }\n      let array = [];\n      for (let data of this.state.questionAnswerData) {\n        if (data.userEmail === qA) {\n          array.push(data);\n          this.setState(prevState => ({\n            showQuestionsNames: true\n          }));\n        }\n      }\n      this.setState({\n        questions: array,\n        messages: [...array[0].questionAnswerText]\n      });\n    };\n  }\n  /**\r\n   * Description - This function get all the data from the server\r\n   */\n  async getQuestionAnswer() {\n    const response = await fetch('http://localhost:5000/premiumQuestionAnswer/getData', {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      }\n    });\n    const result = await response.json();\n    this.setState({\n      questionAnswerData: result\n    });\n    for (let user of result) {\n      if (!this.state.users.includes(user.userEmail)) {\n        this.state.users.push(user.userEmail);\n      }\n    }\n  }\n\n  /**\r\n   * Description - This function activate the getQuestionAnswer function when the page is uploaded\r\n   */\n  componentDidMount() {\n    this.getQuestionAnswer();\n  }\n\n  /**\r\n   * Description - This function show all the data by click on selected item\r\n   * @param {*} index  - Selected item\r\n   */\n\n  /**\r\n   * Description - This function update an answer to the selected question\r\n   * @param {*} e - Selected question\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    let dataToSend;\n    if (!this.state.questions[this.state.selectIndex].haveAnAnswer) {\n      dataToSend = {\n        userId: this.state.questions[this.state.selectIndex].userId,\n        userEmail: this.state.questions[this.state.selectIndex].userEmail,\n        answerText: this.state.answerText,\n        questionText: this.state.answerText,\n        userType: JSON.parse(localStorage.getItem('user')).userType,\n        questionName: this.state.questions[this.state.selectIndex].questionName\n      };\n    } else {\n      dataToSend = {\n        userId: this.state.questions[this.state.selectIndex].userId,\n        userType: JSON.parse(localStorage.getItem('user')).userType,\n        answerText: this.state.answerText,\n        questionText: this.state.answerText,\n        userEmail: this.state.questions[this.state.selectIndex].userEmail,\n        questionName: this.state.questions[this.state.selectIndex].questionName\n      };\n    }\n    const questionInputData = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(dataToSend)\n    };\n    const response = await fetch('http://localhost:5000/premiumQuestionAnswer/updateAnswer', questionInputData);\n    const result = await response.json();\n    this.setState({\n      messages: [...this.state.messages, dataToSend]\n    });\n    if (result.status === 'Email send') {\n      this.setState({\n        answerText: this.state.answerText,\n        showResult: 'The Answer has been updated'\n      });\n      this.setState({\n        answerText: ''\n      });\n      setTimeout(() => {\n        this.setState({\n          showResult: ''\n        });\n      }, 2000);\n      this.getQuestionAnswer();\n    }\n  }\n\n  /**\r\n   * Description - This function check if the all question of the user get an answer\r\n   * @param {*} userEmail  - User data\r\n   * @returns - True if all question are answered and false otherwise\r\n   */\n  checkUserAllHaveAnswers(userEmail) {\n    let array = [];\n    for (let data of this.state.questionAnswerData) {\n      if (data.userEmail === userEmail) {\n        array.push(data);\n      }\n    }\n    return array.every(data => data.userEmail === userEmail && data.haveAnAnswer);\n  }\n  render() {\n    const {\n      showData,\n      selectIndex,\n      showQuestionsNames\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Question Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.external,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.model,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List Of Questions/Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), this.state.users.map((qA, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.handelClickQuestion(qA, index);\n              },\n              className: `${style.productButton} ${this.checkUserAllHaveAnswers(qA) ?\n              // this.state.messages.length > 0 && this.state.messages[\n              //   this.state.messages.length - 1\n              // ].questionAnswerText &&  this.state.messages[\n              //   this.state.messages.length - 1\n              // ].questionAnswerText.userType === 'Premium'\n              style.greenBackground : style.redBackground}`,\n              children: qA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)), showQuestionsNames ? /*#__PURE__*/_jsxDEV(\"section\", {\n            className: style.questions,\n            children: this.state.questions.map((qA, index) => {\n              const hasAnswer = this.state.questionAnswerData.find(data => data._id === qA._id).haveAnAnswer;\n              return /*#__PURE__*/_jsxDEV(\"section\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${style.btn} ${hasAnswer ? style.greenBackground : style.redBackground}`,\n                  onClick: () => {\n                    this.handelClick(index);\n                  },\n                  children: qA.questionName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this)\n              }, qA._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), showData && selectIndex !== null && selectIndex < this.state.questions.length && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.showAllData,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: style.h2,\n            children: \"Question/Answer Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.h3,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.span,\n                children: \" Question Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), this.state.questions[selectIndex].questionDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: style.h3,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.span,\n                children: \" Question Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), this.state.questions[selectIndex].questionName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), this.state.messages.map((oneMessage, index) => {\n              if (oneMessage.userType !== 'Premium') {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.user,\n                  style: {\n                    direction: 'ltr',\n                    color: 'red'\n                  },\n                  children: oneMessage.questionText\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.premium,\n                  style: {\n                    direction: 'rtl',\n                    color: 'blue'\n                  },\n                  children: oneMessage.questionText\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 25\n                }, this);\n              }\n            }), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit.bind(this),\n                className: style.form,\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: style.textArea,\n                  value: this.state.answerText,\n                  name: \"tarea\",\n                  rows: \"6\",\n                  cols: \"40\",\n                  placeholder: \" Write text here\",\n                  required: true,\n                  onChange: e => this.setState({\n                    answerText: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  text: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: style.showResult,\n                  children: this.state.showResult\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","Button","QuestionAnswerPremium","state","questionAnswerData","questions","messages","users","showData","answerText","selectIndex","showQuestionsNames","questionIndex","handelClick","index","length","setState","questionAnswerText","handelClickQuestion","qA","array","data","userEmail","push","prevState","getQuestionAnswer","response","fetch","method","crossDomain","headers","Accept","result","json","user","includes","componentDidMount","handleSubmit","e","preventDefault","dataToSend","haveAnAnswer","userId","questionText","userType","JSON","parse","localStorage","getItem","questionName","questionInputData","body","stringify","status","showResult","setTimeout","checkUserAllHaveAnswers","every","render","external","model","map","productButton","greenBackground","redBackground","hasAnswer","find","_id","btn","showAllData","h2","h3","span","questionDate","oneMessage","direction","color","premium","bind","form","textArea","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/premiumPages/pages/questionAnswerPremium/QuestionAnswerPremium.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../commonComponents/header/Header';\r\nimport style from './questionAnswerPremium.module.css';\r\nimport Button from '../../../commonComponents/button/Button';\r\n\r\n/**\r\n * Description - This class show all question from the users and this class answering those questions\r\n */\r\nexport default class QuestionAnswerPremium extends Component {\r\n  state = {\r\n    questionAnswerData: [],\r\n    questions: [],\r\n    messages: [],\r\n    users: [],\r\n    showData: false,\r\n    answerText: '',\r\n    selectIndex: null,\r\n    showQuestionsNames: false,\r\n    questionIndex: null,\r\n  };\r\n\r\n  /**\r\n   * Description - This function get all the data from the server\r\n   */\r\n  async getQuestionAnswer() {\r\n    const response = await fetch(\r\n      'http://localhost:5000/premiumQuestionAnswer/getData',\r\n      {\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Accept-Control-Allow-Origin': '*',\r\n        },\r\n      }\r\n    );\r\n    const result = await response.json();\r\n    this.setState({ questionAnswerData: result });\r\n\r\n    for (let user of result) {\r\n      if (!this.state.users.includes(user.userEmail)) {\r\n        this.state.users.push(user.userEmail);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Description - This function activate the getQuestionAnswer function when the page is uploaded\r\n   */\r\n  componentDidMount() {\r\n    this.getQuestionAnswer();\r\n  }\r\n\r\n  /**\r\n   * Description - This function show all the data by click on selected item\r\n   * @param {*} index  - Selected item\r\n   */\r\n  handelClick = index => {\r\n    if (index >= this.state.questions.length) {\r\n      this.setState({\r\n        showData: true,\r\n        selectIndex: 0,\r\n        messages: this.state.questions[0].questionAnswerText,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showData: true,\r\n        selectIndex: index,\r\n        messages: this.state.questions[index].questionAnswerText,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   *Description  - This function show all the question of the selected user\r\n   * @param {*} qA - Selsected user\r\n   */\r\n  handelClickQuestion = qA => {\r\n    this.setState({ questions: [] });\r\n    if (this.state.selectIndex) {\r\n      this.setState({ selectIndex: 0 });\r\n    }\r\n    let array = [];\r\n    for (let data of this.state.questionAnswerData) {\r\n      if (data.userEmail === qA) {\r\n        array.push(data);\r\n        this.setState(prevState => ({\r\n          showQuestionsNames: true,\r\n        }));\r\n      }\r\n    }\r\n    this.setState({\r\n      questions: array,\r\n      messages: [...array[0].questionAnswerText],\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Description - This function update an answer to the selected question\r\n   * @param {*} e - Selected question\r\n   */\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let dataToSend;\r\n    if (!this.state.questions[this.state.selectIndex].haveAnAnswer) {\r\n      dataToSend = {\r\n        userId: this.state.questions[this.state.selectIndex].userId,\r\n        userEmail: this.state.questions[this.state.selectIndex].userEmail,\r\n        answerText: this.state.answerText,\r\n        questionText: this.state.answerText,\r\n        userType: JSON.parse(localStorage.getItem('user')).userType,\r\n        questionName: this.state.questions[this.state.selectIndex].questionName,\r\n      };\r\n    } else {\r\n      dataToSend = {\r\n        userId: this.state.questions[this.state.selectIndex].userId,\r\n        userType: JSON.parse(localStorage.getItem('user')).userType,\r\n        answerText: this.state.answerText,\r\n        questionText: this.state.answerText,\r\n        userEmail: this.state.questions[this.state.selectIndex].userEmail,\r\n        questionName: this.state.questions[this.state.selectIndex].questionName,\r\n      };\r\n    }\r\n    const questionInputData = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(dataToSend),\r\n    };\r\n\r\n    const response = await fetch(\r\n      'http://localhost:5000/premiumQuestionAnswer/updateAnswer',\r\n      questionInputData\r\n    );\r\n    const result = await response.json();\r\n\r\n    this.setState({ messages: [...this.state.messages, dataToSend] });\r\n    if (result.status === 'Email send') {\r\n      this.setState({\r\n        answerText: this.state.answerText,\r\n        showResult: 'The Answer has been updated',\r\n      });\r\n      this.setState({ answerText: '' });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n        });\r\n      }, 2000);\r\n      this.getQuestionAnswer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Description - This function check if the all question of the user get an answer\r\n   * @param {*} userEmail  - User data\r\n   * @returns - True if all question are answered and false otherwise\r\n   */\r\n  checkUserAllHaveAnswers(userEmail) {\r\n    let array = [];\r\n    for (let data of this.state.questionAnswerData) {\r\n      if (data.userEmail === userEmail) {\r\n        array.push(data);\r\n      }\r\n    }\r\n    return array.every(\r\n      data => data.userEmail === userEmail && data.haveAnAnswer\r\n    );\r\n  }\r\n  render() {\r\n    const { showData, selectIndex, showQuestionsNames } = this.state;\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Question Answer' />\r\n        <section className={style.external}>\r\n          <section className={style.model}>\r\n            <h2>List Of Questions/Answers</h2>\r\n            {this.state.users.map((qA, index) => (\r\n              <section key={index}>\r\n                <button\r\n                  onClick={() => {\r\n                    this.handelClickQuestion(qA, index);\r\n                  }}\r\n                  className={`${style.productButton} ${\r\n                    this.checkUserAllHaveAnswers(qA)\r\n                      ? // this.state.messages.length > 0 && this.state.messages[\r\n                        //   this.state.messages.length - 1\r\n                        // ].questionAnswerText &&  this.state.messages[\r\n                        //   this.state.messages.length - 1\r\n                        // ].questionAnswerText.userType === 'Premium'\r\n                        style.greenBackground\r\n                      : style.redBackground\r\n                  }`}\r\n                >\r\n                  {qA}\r\n                </button>\r\n              </section>\r\n            ))}\r\n\r\n            {showQuestionsNames ? (\r\n              <section className={style.questions}>\r\n                {this.state.questions.map((qA, index) => {\r\n                  const hasAnswer = this.state.questionAnswerData.find(\r\n                    data => data._id === qA._id\r\n                  ).haveAnAnswer;\r\n\r\n                  return (\r\n                    <section key={qA._id}>\r\n                      <button\r\n                        className={`${style.btn} ${\r\n                          hasAnswer\r\n                            ? style.greenBackground\r\n                            : style.redBackground\r\n                        }`}\r\n                        onClick={() => {\r\n                          this.handelClick(index);\r\n                        }}\r\n                      >\r\n                        {qA.questionName}\r\n                      </button>\r\n                    </section>\r\n                  );\r\n                })}\r\n              </section>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </section>\r\n\r\n          {showData &&\r\n            selectIndex !== null &&\r\n            selectIndex < this.state.questions.length && (\r\n              <section className={style.showAllData}>\r\n                <h2 className={style.h2}>Question/Answer Data</h2>\r\n                <div>\r\n                  <h3 className={style.h3}>\r\n                    <span className={style.span}> Question Date:</span>\r\n                    {this.state.questions[selectIndex].questionDate}\r\n                  </h3>\r\n                  <h3 className={style.h3}>\r\n                    <span className={style.span}> Question Name:</span>\r\n\r\n                    {this.state.questions[selectIndex].questionName}\r\n                  </h3>\r\n                  {this.state.messages.map((oneMessage, index) => {\r\n                    if (oneMessage.userType !== 'Premium') {\r\n                      return (\r\n                        <div\r\n                        className={style.user}\r\n                          key={index}\r\n                          style={{ direction: 'ltr', color: 'red' }}\r\n                        >\r\n                          {oneMessage.questionText}\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <div\r\n                        className={style.premium}\r\n                          key={index}\r\n                          style={{ direction: 'rtl', color: 'blue' }}\r\n                        >\r\n                          {oneMessage.questionText}\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })}\r\n\r\n                  <section>\r\n                    <form\r\n                      onSubmit={this.handleSubmit.bind(this)}\r\n                      className={style.form}\r\n                    >\r\n                      <textarea\r\n                        className={style.textArea}\r\n                        value={this.state.answerText}\r\n                        name='tarea'\r\n                        rows='6'\r\n                        cols='40'\r\n                        placeholder=' Write text here'\r\n                        required\r\n                        onChange={e =>\r\n                          this.setState({ answerText: e.target.value })\r\n                        }\r\n                      ></textarea>\r\n\r\n                      <Button type='submit' text='submit' />\r\n\r\n                      <p className={style.showResult}>\r\n                        {this.state.showResult}\r\n                      </p>\r\n                    </form>\r\n                  </section>\r\n                </div>\r\n              </section>\r\n            )}\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}