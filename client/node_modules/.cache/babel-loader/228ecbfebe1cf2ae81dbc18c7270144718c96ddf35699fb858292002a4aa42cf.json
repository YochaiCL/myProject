{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\userPages\\\\pages\\\\questionAnswer\\\\newQuestion\\\\NewQuestion.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../commonComponents/header/Header';\nimport style from './newQuestion.module.css';\nimport Button from '../../../../commonComponents/button/Button';\n\n/**\r\n * Description -\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewQuestion extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionName: '',\n      questionText: '',\n      showResult: '',\n      userId: JSON.parse(localStorage.getItem('user'))\n    };\n  }\n  async handleSubmit(e) {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/userQuestionAnswer/newQuestion', {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(this.state)\n    });\n    const result = await response.json();\n    // console.log(result);\n    if (result.status === 'ok') {\n      this.setState({\n        showResult: 'The Test has been added',\n        textFinalResult: `your result is:${this.state.gradeShow}/100`\n      });\n      setTimeout(() => {\n        this.setState({\n          testName: '',\n          showResult: '',\n          textFinalResult: '',\n          modelCase: '',\n          modelMotherboard: '',\n          modelCPU: '',\n          modelCPUCooler: '',\n          modelGPU: '',\n          modelPSU: '',\n          modelRAM: '',\n          modelSSD: '',\n          resultCase: '',\n          resultMotherboard: '',\n          resultCpu: '',\n          resultPsu: '',\n          resultGpu: '',\n          resultCpuCooler: '',\n          resultRam: '',\n          resultSsd: '',\n          selectClassCase: '',\n          selectClassMotherboard: '',\n          selectClassCpu: '',\n          selectClassPsu: '',\n          selectClassGpu: '',\n          selectClassCpuCooler: '',\n          selectClassRam: '',\n          selectClassSsd: ''\n        });\n      }, 2000);\n    } else if (result.status === 'Test already exist') {\n      setTimeout(() => {\n        this.setState({\n          showResult: 'This test name already exist'\n        });\n      }, 2000);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit.bind(this),\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input,\n            type: \"text\",\n            placeholder: \"Enter Question Name:\",\n            value: this.state.questionName,\n            required: true,\n            onChange: e => this.setState({\n              questionName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"tarea\",\n            rows: \"6\",\n            cols: \"40\",\n            placeholder: \" Write text here\",\n            required: true,\n            onChange: e => this.setState({\n              questionText: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.showResult,\n            children: this.state.showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","Button","NewQuestion","state","questionName","questionText","showResult","userId","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","response","fetch","method","crossDomain","headers","Accept","body","stringify","result","json","status","setState","textFinalResult","gradeShow","setTimeout","testName","modelCase","modelMotherboard","modelCPU","modelCPUCooler","modelGPU","modelPSU","modelRAM","modelSSD","resultCase","resultMotherboard","resultCpu","resultPsu","resultGpu","resultCpuCooler","resultRam","resultSsd","selectClassCase","selectClassMotherboard","selectClassCpu","selectClassPsu","selectClassGpu","selectClassCpuCooler","selectClassRam","selectClassSsd","render","bind","form","input","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/userPages/pages/questionAnswer/newQuestion/NewQuestion.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../commonComponents/header/Header';\r\nimport style from './newQuestion.module.css';\r\nimport Button from '../../../../commonComponents/button/Button';\r\n\r\n/**\r\n * Description -\r\n */\r\nexport default class NewQuestion extends Component {\r\n  state = {\r\n    questionName: '',\r\n    questionText: '',\r\n    showResult: '',\r\n    userId: JSON.parse(localStorage.getItem('user')),\r\n  };\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(\r\n      'http://localhost:5000/userQuestionAnswer/newQuestion',\r\n      {\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        body: JSON.stringify(this.state),\r\n      }\r\n    );\r\n    const result = await response.json();\r\n    // console.log(result);\r\n    if (result.status === 'ok') {\r\n      this.setState({\r\n        showResult: 'The Test has been added',\r\n        textFinalResult: `your result is:${this.state.gradeShow}/100`,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          testName: '',\r\n          showResult: '',\r\n          textFinalResult: '',\r\n          modelCase: '',\r\n          modelMotherboard: '',\r\n          modelCPU: '',\r\n          modelCPUCooler: '',\r\n          modelGPU: '',\r\n          modelPSU: '',\r\n          modelRAM: '',\r\n          modelSSD: '',\r\n          resultCase: '',\r\n          resultMotherboard: '',\r\n          resultCpu: '',\r\n          resultPsu: '',\r\n          resultGpu: '',\r\n          resultCpuCooler: '',\r\n          resultRam: '',\r\n          resultSsd: '',\r\n          selectClassCase: '',\r\n          selectClassMotherboard: '',\r\n          selectClassCpu: '',\r\n          selectClassPsu: '',\r\n          selectClassGpu: '',\r\n          selectClassCpuCooler: '',\r\n          selectClassRam: '',\r\n          selectClassSsd: '',\r\n        });\r\n      }, 2000);\r\n    } else if (result.status === 'Test already exist') {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: 'This test name already exist',\r\n        });\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='New Question' />\r\n        <section>\r\n          <form onSubmit={this.handleSubmit.bind(this)} className={style.form}>\r\n            <input\r\n              className={style.input}\r\n              type='text'\r\n              placeholder='Enter Question Name:'\r\n              value={this.state.questionName}\r\n              required\r\n              onChange={e => this.setState({ questionName: e.target.value })}\r\n            />\r\n\r\n            <textarea\r\n              name='tarea'\r\n              rows='6'\r\n              cols='40'\r\n              placeholder=' Write text here'\r\n              required\r\n              onChange={e => this.setState({ questionText: e.target.value })}\r\n            ></textarea>\r\n\r\n            <Button type='submit' text='submit' />\r\n            <p className={style.showResult}>{this.state.showResult}</p>\r\n          </form>\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}