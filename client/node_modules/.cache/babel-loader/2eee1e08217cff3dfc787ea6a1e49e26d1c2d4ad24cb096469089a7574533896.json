{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\add\\\\addComponents\\\\addCpuCooler\\\\addCpuCoolerFan\\\\AddCpuCoolerFan.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../../../../commonComponents/button/Button';\nimport PageLayout from '../../../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../../../commonComponents/header/Header';\nimport style from '../../addMotherboard/addMotherboard.module.css';\n\n/**\r\n * Description - This class add Cpu Cooler fan to the database\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddCpuCoolerFan extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      model: '',\n      socket_support: '',\n      fan_diameter: '',\n      showResult: '',\n      modelsArray: []\n    };\n  }\n  /**\r\n   * Description - This function get all models names from the server and set them on array\r\n   */\n  async getModels() {\n    const response = await fetch('http://localhost:5000/getComponentsModels');\n    const result = await response.json();\n    // console.log(result);\n    let allModels = [];\n    for (let key in result) {\n      // console.log(result[key]);\n      for (let model of result[key]) allModels.push(model);\n    }\n    // console.log(allModels);\n    this.setState({\n      modelsArray: allModels\n    });\n  }\n\n  /**\r\n   * Description - This function activate the getModels function when the page is upload\r\n   */\n  componentDidMount() {\n    this.getModels();\n  }\n\n  /**\r\n   * Description - This function add cpu Cooler Fan to collection\r\n   * @param {*} e - Cpu Cooler Fan data from Admin\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    for (let model of this.state.modelsArray) {\n      if (model === this.state.model) {\n        this.setState({\n          showResult: 'This model name already exist'\n        });\n        return;\n      }\n    }\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(this.state)\n    };\n    const response = await fetch('http://localhost:5000/addComponent/cpuCoolerFan', options);\n    const result = await response.json();\n    if (result.status === 'ok') {\n      this.setState({\n        showResult: 'Component have added'\n      });\n      setTimeout(() => {\n        this.setState({\n          showResult: '',\n          model: '',\n          socket_support: '',\n          fan_diameter: ''\n        });\n      }, 1000);\n    } else if (result.status === 'Model already exist') {\n      this.setState({\n        showResult: 'Component already exist'\n      });\n      setTimeout(() => {\n        this.setState({\n          showResult: ''\n        });\n      }, 1000);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Add Cpu Cooler Fan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit.bind(this),\n          className: `${style.form} ${style.smallForm}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input,\n            type: \"text\",\n            placeholder: \"Enter Model:\",\n            value: this.state.model,\n            required: true,\n            onChange: e => this.setState({\n              model: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input,\n            type: \"text\",\n            placeholder: \"Enter Socket Support:\",\n            required: true,\n            value: this.state.socket_support,\n            onChange: e => this.setState({\n              socket_support: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input,\n            type: \"text\",\n            placeholder: \"Enter Fan Diameter:\",\n            required: true,\n            value: this.state.fan_diameter,\n            onChange: e => this.setState({\n              fan_diameter: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.showResult,\n            children: this.state.showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","PageLayout","Header","style","AddCpuCoolerFan","state","model","socket_support","fan_diameter","showResult","modelsArray","getModels","response","fetch","result","json","allModels","key","push","setState","componentDidMount","handleSubmit","e","preventDefault","options","method","crossDomain","headers","Accept","body","JSON","stringify","status","setTimeout","render","bind","form","smallForm","input","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/add/addComponents/addCpuCooler/addCpuCoolerFan/AddCpuCoolerFan.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../../../../../commonComponents/button/Button';\r\nimport PageLayout from '../../../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../../../commonComponents/header/Header';\r\nimport style from '../../addMotherboard/addMotherboard.module.css';\r\n\r\n/**\r\n * Description - This class add Cpu Cooler fan to the database\r\n */\r\nexport default class AddCpuCoolerFan extends Component {\r\n  state = {\r\n    model: '',\r\n    socket_support: '',\r\n    fan_diameter: '',\r\n    showResult: '',\r\n    modelsArray: [],\r\n  };\r\n\r\n  /**\r\n   * Description - This function get all models names from the server and set them on array\r\n   */\r\n  async getModels() {\r\n    const response = await fetch('http://localhost:5000/getComponentsModels');\r\n    const result = await response.json();\r\n    // console.log(result);\r\n    let allModels = [];\r\n    for (let key in result) {\r\n      // console.log(result[key]);\r\n      for (let model of result[key]) allModels.push(model);\r\n    }\r\n    // console.log(allModels);\r\n    this.setState({ modelsArray: allModels });\r\n  }\r\n\r\n  /**\r\n   * Description - This function activate the getModels function when the page is upload\r\n   */\r\n  componentDidMount() {\r\n    this.getModels();\r\n  }\r\n\r\n  /**\r\n   * Description - This function add cpu Cooler Fan to collection\r\n   * @param {*} e - Cpu Cooler Fan data from Admin\r\n   */\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    for (let model of this.state.modelsArray) {\r\n      if (model === this.state.model) {\r\n        this.setState({ showResult: 'This model name already exist' });\r\n        return;\r\n      }\r\n    }\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    };\r\n    const response = await fetch(\r\n      'http://localhost:5000/addComponent/cpuCoolerFan',\r\n      options\r\n    );\r\n    const result = await response.json();\r\n    if (result.status === 'ok') {\r\n      this.setState({ showResult: 'Component have added' });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n          model: '',\r\n          socket_support: '',\r\n          fan_diameter: '',\r\n        });\r\n      }, 1000);\r\n    } else if (result.status === 'Model already exist') {\r\n      this.setState({ showResult: 'Component already exist' });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n        });\r\n      }, 1000);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Add Cpu Cooler Fan' />\r\n        <section>\r\n          <form\r\n            onSubmit={this.handleSubmit.bind(this)}\r\n            className={`${style.form} ${style.smallForm}`}\r\n          >\r\n            <input\r\n              className={style.input}\r\n              type='text'\r\n              placeholder='Enter Model:'\r\n              value={this.state.model}\r\n              required\r\n              onChange={e => this.setState({ model: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              className={style.input}\r\n              type='text'\r\n              placeholder='Enter Socket Support:'\r\n              required\r\n              value={this.state.socket_support}\r\n              onChange={e => this.setState({ socket_support: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              className={style.input}\r\n              type='text'\r\n              placeholder='Enter Fan Diameter:'\r\n              required\r\n              value={this.state.fan_diameter}\r\n              onChange={e => this.setState({ fan_diameter: e.target.value })}\r\n            />\r\n\r\n            <Button type='submit' text='submit' />\r\n            <p className={style.showResult}>{this.state.showResult}</p>\r\n          </form>\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}