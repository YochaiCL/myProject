{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\add\\\\addComponents\\\\addCpu\\\\AddCpu.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../../../pageSettings/button/Button';\nimport PageLayout from '../../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../../pageSettings/header/Header';\nimport style from '../addMotherboard/addMotherboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddCpu extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      model: '',\n      cores: '',\n      threads: '',\n      frequency: '',\n      cache: '',\n      memory_type: '',\n      socket: '',\n      showResult: ''\n    };\n  }\n  /**\r\n   * Description - This function add case to collection\r\n   * @param {*} e - Case data from Admin\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(this.state)\n    };\n    const response = await fetch('http://localhost:5000/addComponent/cpu', options);\n    const result = await response.json();\n\n    // Checking the status of the response\n\n    // Updating the state to display a success message\n    if (result.status === 'ok') {\n      this.setState({\n        showResult: 'Component have added'\n      });\n    } // Handling different response statuses\n    else if (result.status === 'Model already exist') {\n      this.setState({\n        showResult: 'Component already exist'\n      });\n    } else if (result.status === 'Error !! check your details') {}\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Add CPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit.bind(this),\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Model:\",\n            value: this.state.model,\n            required: true,\n            onChange: e => this.setState({\n              model: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Cors:\",\n            required: true,\n            onChange: e => this.setState({\n              cores: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Threads:\",\n            required: true,\n            onChange: e => this.setState({\n              threads: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Frequency:\",\n            required: true,\n            onChange: e => this.setState({\n              frequency: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Cache:\",\n            required: true,\n            onChange: e => this.setState({\n              cache: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Type:\",\n            required: true,\n            onChange: e => this.setState({\n              memory_type: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Socket Type:\",\n            required: true,\n            onChange: e => this.setState({\n              socket: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","PageLayout","Header","style","AddCpu","state","model","cores","threads","frequency","cache","memory_type","socket","showResult","handleSubmit","e","preventDefault","console","log","options","method","crossDomain","headers","Accept","body","JSON","stringify","response","fetch","result","json","status","setState","render","bind","form","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/add/addComponents/addCpu/AddCpu.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../../../../pageSettings/button/Button';\r\nimport PageLayout from '../../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../../pageSettings/header/Header';\r\nimport style from '../addMotherboard/addMotherboard.module.css';\r\n\r\nexport default class AddCpu extends Component {\r\n\r\n  state = {\r\n    model: '',\r\n    cores: '',\r\n    threads: '',\r\n    frequency: '',\r\n    cache: '',\r\n    memory_type: '',\r\n    socket: '',\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function add case to collection\r\n   * @param {*} e - Case data from Admin\r\n   */\r\n  async handleSubmit(e) {\r\n   \r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    };\r\n    const response = await fetch(\r\n      'http://localhost:5000/addComponent/cpu',\r\n      options\r\n    );\r\n    const result = await response.json();\r\n\r\n    // Checking the status of the response\r\n\r\n    // Updating the state to display a success message\r\n    if (result.status === 'ok') {\r\n      this.setState({ showResult: 'Component have added' });\r\n    } // Handling different response statuses\r\n    else if (result.status === 'Model already exist') {\r\n      this.setState({ showResult: 'Component already exist' });\r\n    } else if (result.status === 'Error !! check your details') {\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Add CPU' />\r\n        <section>\r\n          <form onSubmit={this.handleSubmit.bind(this)} className={style.form}>\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Model:'\r\n              value={this.state.model}\r\n              required\r\n              onChange={e => this.setState({ model: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Cors:'\r\n              required\r\n              onChange={e => this.setState({ cores: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Threads:'\r\n              required\r\n              onChange={e => this.setState({ threads: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Frequency:'\r\n              required\r\n              onChange={e => this.setState({ frequency: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Cache:'\r\n              required\r\n              onChange={e => this.setState({ cache: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Type:'\r\n              required\r\n              onChange={e => this.setState({ memory_type: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Socket Type:'\r\n              required\r\n              onChange={e => this.setState({ socket: e.target.value })}\r\n            />\r\n\r\n            <Button type='submit' text='submit' />\r\n            <p>{this.state.showResult}</p>\r\n          </form>\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}