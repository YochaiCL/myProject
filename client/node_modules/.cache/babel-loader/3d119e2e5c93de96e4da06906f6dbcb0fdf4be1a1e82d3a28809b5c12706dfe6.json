{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\update\\\\updateComponents\\\\updateCpuCooler\\\\UpdateCpuCoolerFan\\\\UpdateCpuCoolerFan.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../../../../pageSettings/button/Button';\nimport PageLayout from '../../../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../../../pageSettings/header/Header';\nimport style from '../../updateMotherboard/updateMotherboard.module.css';\n\n/**\r\n * Description - This class update the component data by the user inputs\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UpdateCpuCoolerFan extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [{\n        model: 'Loading data...'\n      }],\n      showData: false,\n      selectIndex: null,\n      model: '',\n      socket_support: '',\n      fan_diameter: '',\n      showResult: ''\n    };\n    this.handelClick = index => {\n      this.setState({\n        showData: true,\n        selectIndex: index,\n        model: this.state.products[index].model,\n        socket_support: this.state.products[index].socket_support,\n        fan_diameter: this.state.products[index].fan_diameter\n      });\n    };\n  }\n  /**\r\n   * Description - This function activate the getProducts function when the wab is upload\r\n   */\n  componentDidMount() {\n    this.getProducts();\n  }\n\n  /**\r\n   * Description - This function set the value of the inputs when we click on the selected component and show his data\r\n   * @param {*} index - Selected component\r\n   */\n\n  /**\r\n   * Description - This function get the component data from the server\r\n   */\n  async getProducts() {\n    const response = await fetch('http://localhost:5000/getComponent/cpuCoolerFan');\n    const result = await response.json();\n    // console.log(result);\n    this.setState({\n      products: result\n    });\n  }\n\n  /**\r\n   * Description - This function update the component data in the server\r\n   * @param {*} e  - inputs to prevent from the page to refresh\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    let newComponent = {\n      model: this.state.model,\n      socket_support: this.state.socket_support,\n      fan_diameter: this.state.fan_diameter\n    };\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        model: this.state.model,\n        newComponent\n      })\n    };\n    const response = await fetch('http://localhost:5000/updateComponent/cpuCooleFan', options);\n    const result = await response.json();\n    if (result.status === 'true') {\n      this.setState({\n        showResult: 'The component has been update'\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Update Cpu Cooler Fan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.external,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.model,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List Of Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), this.state.products.map((product, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.handelClick(index);\n              },\n              className: style.productButton,\n              children: product.model\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), this.state.showData && this.state.selectIndex !== null && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.showAllData,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: style.h2,\n            children: \"Product Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit.bind(this),\n                className: `${style.form} ${style.smallForm}`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Model\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: style.span,\n                    children: \" - Read Only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  readOnly: true,\n                  type: \"text\",\n                  placeholder: this.state.products[this.state.selectIndex].model,\n                  value: this.state.model,\n                  required: true,\n                  onChange: e => this.setState({\n                    model: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Socket Support\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: this.state.products[this.state.selectIndex].socket_support,\n                  required: true,\n                  onChange: e => this.setState({\n                    socket_support: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Fan Diameter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: this.state.products[this.state.selectIndex].fan_diameter,\n                  required: true,\n                  onChange: e => this.setState({\n                    fan_diameter: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  text: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: style.showResult,\n                  children: this.state.showResult\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","PageLayout","Header","style","UpdateCpuCoolerFan","state","products","model","showData","selectIndex","socket_support","fan_diameter","showResult","handelClick","index","setState","componentDidMount","getProducts","response","fetch","result","json","handleSubmit","e","preventDefault","newComponent","options","method","crossDomain","headers","Accept","body","JSON","stringify","status","render","external","map","product","productButton","showAllData","h2","bind","form","smallForm","span","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/update/updateComponents/updateCpuCooler/UpdateCpuCoolerFan/UpdateCpuCoolerFan.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../../../../../pageSettings/button/Button';\r\nimport PageLayout from '../../../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../../../pageSettings/header/Header';\r\nimport style from '../../updateMotherboard/updateMotherboard.module.css';\r\n\r\n/**\r\n * Description - This class update the component data by the user inputs\r\n */\r\nexport default class UpdateCpuCoolerFan extends Component {\r\n  state = {\r\n    products: [{ model: 'Loading data...' }],\r\n    showData: false,\r\n    selectIndex: null,\r\n    model: '',\r\n    socket_support: '',\r\n    fan_diameter: '',\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function activate the getProducts function when the wab is upload\r\n   */\r\n  componentDidMount() {\r\n    this.getProducts();\r\n  }\r\n\r\n  /**\r\n   * Description - This function set the value of the inputs when we click on the selected component and show his data\r\n   * @param {*} index - Selected component\r\n   */\r\n  handelClick = index => {\r\n    this.setState({\r\n      showData: true,\r\n      selectIndex: index,\r\n      model: this.state.products[index].model,\r\n      socket_support: this.state.products[index].socket_support,\r\n      fan_diameter: this.state.products[index].fan_diameter,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Description - This function get the component data from the server\r\n   */\r\n  async getProducts() {\r\n    const response = await fetch(\r\n      'http://localhost:5000/getComponent/cpuCoolerFan'\r\n    );\r\n    const result = await response.json();\r\n    // console.log(result);\r\n    this.setState({ products: result });\r\n  }\r\n\r\n  /**\r\n   * Description - This function update the component data in the server\r\n   * @param {*} e  - inputs to prevent from the page to refresh\r\n   */\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let newComponent = {\r\n      model: this.state.model,\r\n      socket_support: this.state.socket_support,\r\n      fan_diameter: this.state.fan_diameter,\r\n    };\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify({\r\n        model: this.state.model,\r\n        newComponent,\r\n      }),\r\n    };\r\n    const response = await fetch(\r\n      'http://localhost:5000/updateComponent/cpuCooleFan',\r\n      options\r\n    );\r\n    const result = await response.json();\r\n    if (result.status === 'true') {\r\n      this.setState({ showResult: 'The component has been update' });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Update Cpu Cooler Fan' />\r\n        <section className={style.external}>\r\n          <section className={style.model}>\r\n            <h2>List Of Products</h2>\r\n            {this.state.products.map((product, index) => (\r\n              <section key={index}>\r\n                <button\r\n                  onClick={() => {\r\n                    this.handelClick(index);\r\n                  }}\r\n                  className={style.productButton}\r\n                >\r\n                  {product.model}\r\n                </button>\r\n              </section>\r\n            ))}\r\n          </section>\r\n          {this.state.showData && this.state.selectIndex !== null && (\r\n            <section className={style.showAllData}>\r\n              <h2 className={style.h2}>Product Data</h2>\r\n              <div>\r\n                <section>\r\n                  <form\r\n                    onSubmit={this.handleSubmit.bind(this)}\r\n                    className={`${style.form} ${style.smallForm}`}\r\n                  >\r\n                    <p>\r\n                      Model\r\n                      <span className={style.span}> - Read Only</span>\r\n                    </p>\r\n                    <input\r\n                      readOnly\r\n                      type='text'\r\n                      placeholder={\r\n                        this.state.products[this.state.selectIndex].model\r\n                      }\r\n                      value={this.state.model}\r\n                      required\r\n                      onChange={e => this.setState({ model: e.target.value })}\r\n                    />\r\n                    <p>Socket Support</p>\r\n                    <input\r\n                      type='text'\r\n                      placeholder={\r\n                        this.state.products[this.state.selectIndex]\r\n                          .socket_support\r\n                      }\r\n                      required\r\n                      onChange={e =>\r\n                        this.setState({ socket_support: e.target.value })\r\n                      }\r\n                    />\r\n                    <p>Fan Diameter</p>\r\n                    <input\r\n                      type='text'\r\n                      placeholder={\r\n                        this.state.products[this.state.selectIndex].fan_diameter\r\n                      }\r\n                      required\r\n                      onChange={e =>\r\n                        this.setState({\r\n                          fan_diameter: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n\r\n                    <Button type='submit' text='submit' />\r\n                    <p className={style.showResult}>{this.state.showResult}</p>\r\n                  </form>\r\n                </section>\r\n              </div>\r\n            </section>\r\n          )}\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}