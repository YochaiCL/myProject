{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\adminReports\\\\questionsAnswersReportAdmin\\\\QuestionsAnswersReportAdmin.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../commonComponents/header/Header';\nimport style from './questionsAnswersReportAdmin.module.css';\nimport LinkLayout from '../../../../commonComponents/linkLayout/LinkLayout';\n\n/**\r\n * Description - This class display the question/answer report\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionsAnswersReport extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionAnswerData: [],\n      openQuestions: 0,\n      closedQuestions: 0\n    };\n  }\n  /**\r\n   * Description - This function activate the function getQuestionAnswer when the page is uploaded\r\n   */\n  async componentDidMount() {\n    this.getQuestionAnswer();\n  }\n\n  /**\r\n   * Description - This function get all the data of the question/answer from the server\r\n   */\n  async getQuestionAnswer() {\n    try {\n      const response = await fetch('http://localhost:5000/reports/getQuestionAnswerData', {\n        method: 'POST',\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Accept-Control-Allow-Origin': '*'\n        }\n      });\n      const result = await response.json();\n\n      // console.log(result);\n\n      this.setState({\n        questionAnswerData: result\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Question Answer Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.link,\n        children: [' ', /*#__PURE__*/_jsxDEV(LinkLayout, {\n          toLink: \"/premiumQuestions\",\n          nameLink: \"To see full conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","LinkLayout","QuestionsAnswersReport","state","questionAnswerData","openQuestions","closedQuestions","componentDidMount","getQuestionAnswer","response","fetch","method","crossDomain","headers","Accept","result","json","setState","error","console","render","link"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/adminReports/questionsAnswersReportAdmin/QuestionsAnswersReportAdmin.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../commonComponents/header/Header';\r\nimport style from './questionsAnswersReportAdmin.module.css';\r\nimport LinkLayout from '../../../../commonComponents/linkLayout/LinkLayout';\r\n\r\n/**\r\n * Description - This class display the question/answer report\r\n */\r\nexport default class QuestionsAnswersReport extends Component {\r\n  state = {\r\n    questionAnswerData: [],\r\n    openQuestions: 0,\r\n    closedQuestions: 0,\r\n  };\r\n\r\n  /**\r\n   * Description - This function activate the function getQuestionAnswer when the page is uploaded\r\n   */\r\n  async componentDidMount() {\r\n    this.getQuestionAnswer();\r\n  }\r\n\r\n  /**\r\n   * Description - This function get all the data of the question/answer from the server\r\n   */\r\n  async getQuestionAnswer() {\r\n    try {\r\n      const response = await fetch(\r\n        'http://localhost:5000/reports/getQuestionAnswerData',\r\n        {\r\n          method: 'POST',\r\n          crossDomain: true,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            'Accept-Control-Allow-Origin': '*',\r\n          },\r\n        }\r\n      );\r\n      const result = await response.json();\r\n\r\n      // console.log(result);\r\n\r\n      this.setState({\r\n        questionAnswerData: result,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Question Answer Reports' />\r\n\r\n        {/* <table className={style.table}>\r\n          <thead>\r\n            <tr className={style.tr}>\r\n              <th>User Name</th>\r\n              <th>User Email</th>\r\n              <th>Question Name</th>\r\n              <th>Question Text</th>\r\n              <th>Answer Text</th>\r\n              <th>Have an Answer</th>\r\n              <th>Selected Stars</th>\r\n              <th>Question Date</th>\r\n              <th>See All conversation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.questionAnswerData.map(data => (\r\n              <tr key={data._id}>\r\n                <td>{data.userFullName}</td>\r\n                <td>{data.userEmail}</td>\r\n                <td>{data.questionName}</td>\r\n                <td>\r\n                  {data.questionAnswerText.length >= 2\r\n                    ? data.questionAnswerText[\r\n                        data.questionAnswerText.length - 2\r\n                      ].questionText\r\n                    : data.questionAnswerText[\r\n                        data.questionAnswerText.length - 1\r\n                      ].questionText}\r\n                </td>\r\n                <td>\r\n                  {data.questionAnswerText.length >= 2\r\n                    ? data.questionAnswerText[\r\n                        data.questionAnswerText.length - 1\r\n                      ].questionText\r\n                    : ''}\r\n                </td>\r\n                <td>{data.haveAnAnswer ? 'Yes' : 'No'}</td>\r\n                <td>{data.selectedStars}</td>\r\n                <td>{data.questionDate}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table> */}\r\n        <section className={style.link}>\r\n          {' '}\r\n          <LinkLayout\r\n            toLink='/premiumQuestions'\r\n            nameLink='To see full conversation'\r\n          />\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,MAAM,MAAM,4CAA4C;AAC/D,OAAOC,KAAK,MAAM,0CAA0C;AAC5D,OAAOC,UAAU,MAAM,oDAAoD;;AAE3E;AACA;AACA;AAFA;AAGA,eAAe,MAAMC,sBAAsB,SAASL,SAAS,CAAC;EAAA;IAAA;IAAA,KAC5DM,KAAK,GAAG;MACNC,kBAAkB,EAAE,EAAE;MACtBC,aAAa,EAAE,CAAC;MAChBC,eAAe,EAAE;IACnB,CAAC;EAAA;EAED;AACF;AACA;EACE,MAAMC,iBAAiB,GAAG;IACxB,IAAI,CAACC,iBAAiB,EAAE;EAC1B;;EAEA;AACF;AACA;EACE,MAAMA,iBAAiB,GAAG;IACxB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qDAAqD,EACrD;QACEC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,MAAM,EAAE,kBAAkB;UAC1B,6BAA6B,EAAE;QACjC;MACF,CAAC,CACF;MACD,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;;MAEpC;;MAEA,IAAI,CAACC,QAAQ,CAAC;QACZb,kBAAkB,EAAEW;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;EACAE,MAAM,GAAG;IACP,oBACE,QAAC,UAAU;MAAA,wBACT,QAAC,MAAM;QAAC,SAAS,EAAC;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAG,eA6C9C;QAAS,SAAS,EAAEpB,KAAK,CAACqB,IAAK;QAAA,WAC5B,GAAG,eACJ,QAAC,UAAU;UACT,MAAM,EAAC,mBAAmB;UAC1B,QAAQ,EAAC;QAA0B;UAAA;UAAA;UAAA;QAAA,QACnC;MAAA;QAAA;QAAA;QAAA;MAAA,QACM;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAEjB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}