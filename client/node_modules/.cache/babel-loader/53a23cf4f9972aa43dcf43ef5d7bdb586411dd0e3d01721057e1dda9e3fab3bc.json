{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\reports\\\\learnedDataReport\\\\LearnedDataReport.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../commonComponents/header/Header';\nimport style from './learnedDataReport.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class LearnedDataReport extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      mostLearnedComp: '',\n      learnedData: [],\n      componentSums: {\n        motherboard: 0,\n        cpu: 0,\n        cpuCooler: 0,\n        gpu: 0,\n        psu: 0,\n        ram: 0,\n        ssd: 0,\n        dvd: 0,\n        cables: 0,\n        case: 0,\n        fans: 0,\n        hd: 0\n      }\n    };\n  }\n  /**\r\n   * Description - This function activate functions when the page is uploaded\r\n   */\n  async componentDidMount() {\n    await this.getLearnedData();\n  }\n\n  /**\r\n   * Description - This function get all the data about the learned components from the server\r\n   */\n  async getLearnedData() {\n    try {\n      const response = await fetch('http://localhost:5000/adminReports/getLearnedData', {\n        method: 'POST',\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Accept-Control-Allow-Origin': '*'\n        }\n      });\n      const result = await response.json();\n\n      // Create a new object to hold the updated componentSums\n      const updatedComponentSums = {\n        ...this.state.componentSums\n      };\n      result.forEach(data => {\n        Object.keys(updatedComponentSums).forEach(component => {\n          if (data[component] && data[component].haveLearned === true) {\n            updatedComponentSums[component]++;\n          }\n        });\n      });\n      this.setState({\n        learnedData: result,\n        componentSums: updatedComponentSums // Update the state with the new object\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Learned Data Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: style.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: style.tr,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Component\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sum of haveLearned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(this.state.componentSums).map(component => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: component\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.componentSums[component]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, component, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","LearnedDataReport","state","mostLearnedComp","learnedData","componentSums","motherboard","cpu","cpuCooler","gpu","psu","ram","ssd","dvd","cables","case","fans","hd","componentDidMount","getLearnedData","response","fetch","method","crossDomain","headers","Accept","result","json","updatedComponentSums","forEach","data","Object","keys","component","haveLearned","setState","error","console","render","table","tr","map"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/reports/learnedDataReport/LearnedDataReport.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../commonComponents/header/Header';\r\nimport style from './learnedDataReport.module.css';\r\n\r\nexport default class LearnedDataReport extends Component {\r\n  state = {\r\n    mostLearnedComp: '',\r\n    learnedData: [],\r\n    componentSums: {\r\n      motherboard: 0,\r\n      cpu: 0,\r\n      cpuCooler: 0,\r\n      gpu: 0,\r\n      psu: 0,\r\n      ram: 0,\r\n      ssd: 0,\r\n      dvd: 0,\r\n      cables: 0,\r\n      case: 0,\r\n      fans: 0,\r\n      hd: 0,\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Description - This function activate functions when the page is uploaded\r\n   */\r\n  async componentDidMount() {\r\n    await this.getLearnedData();\r\n  }\r\n\r\n  /**\r\n   * Description - This function get all the data about the learned components from the server\r\n   */\r\n  async getLearnedData() {\r\n    try {\r\n      const response = await fetch(\r\n        'http://localhost:5000/adminReports/getLearnedData',\r\n        {\r\n          method: 'POST',\r\n          crossDomain: true,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            'Accept-Control-Allow-Origin': '*',\r\n          },\r\n        }\r\n      );\r\n      const result = await response.json();\r\n\r\n      // Create a new object to hold the updated componentSums\r\n      const updatedComponentSums = { ...this.state.componentSums };\r\n\r\n      result.forEach(data => {\r\n        Object.keys(updatedComponentSums).forEach(component => {\r\n          if (data[component] && data[component].haveLearned === true) {\r\n            updatedComponentSums[component]++;\r\n          }\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        learnedData: result,\r\n        componentSums: updatedComponentSums, // Update the state with the new object\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Learned Data Report' />\r\n        <table className={style.table}>\r\n          <thead>\r\n            <tr className={style.tr}>\r\n              <th>Component</th>\r\n              <th>Sum of haveLearned</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.keys(this.state.componentSums).map(component => (\r\n              <tr key={component}>\r\n                <td>{component}</td>\r\n                <td>{this.state.componentSums[component]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}