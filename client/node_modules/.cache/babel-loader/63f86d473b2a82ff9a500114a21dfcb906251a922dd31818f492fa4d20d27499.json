{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\premiumPages\\\\pages\\\\questionAnswerPremium\\\\QuestionAnswerPremium.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../layouts/pageLayout/PageLayout';\nimport Header from '../../../commonComponents/header/Header';\nimport style from './questionAnswerPremium.module.css';\nimport Button from '../../../commonComponents/button/Button';\n\n/**\r\n * Description -\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuestionAnswerPremium extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questionAnswerData: [],\n      showData: false,\n      selectIndex: null,\n      showQuestionsNames: false,\n      questionIndex: null\n    };\n    this.handelClick = index => {\n      this.setState({\n        showData: true,\n        selectIndex: index\n      });\n      console.log(1245);\n    };\n    this.handelClickQuestion = index => {\n      this.setState(prevState => ({\n        showQuestionsNames: !prevState.showQuestionsNames,\n        questionIndex: index\n      }));\n      console.log(this.state.questionAnswerData);\n    };\n  }\n  async getQuestionAnswer() {\n    const response = await fetch('http://localhost:5000/premiumQuestionAnswer/getData', {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      }\n    });\n    const result = await response.json();\n    this.setState({\n      questionAnswerData: result\n    });\n  }\n  componentDidMount() {\n    this.getQuestionAnswer();\n  }\n  render() {\n    const {\n      questionAnswerData,\n      showData,\n      selectIndex,\n      questionIndex,\n      showQuestionsNames\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Question Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.external,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.model,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"List Of Questions/Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), questionAnswerData.map((qA, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.handelClickQuestion(index);\n              },\n              className: style.productButton,\n              children: index === questionIndex && showQuestionsNames ? qA.userEmail : 'Click to Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 18\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)), showQuestionsNames && questionIndex !== null && questionIndex < questionAnswerData.length && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: style.showAllData,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: style.h2,\n              onClick: () => {\n                this.handelClick(questionIndex);\n              },\n              children: questionAnswerData[questionIndex].questionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), showData && selectIndex !== null && selectIndex < questionAnswerData.length && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.showAllData,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: style.h2,\n            children: \"Question/Answer Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Question Name:\", questionAnswerData[selectIndex].questionName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Question Text:\", questionAnswerData[selectIndex].questionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Question Answer:\", questionAnswerData[selectIndex].answerText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                // onSubmit={this.handleSubmit.bind(this)}\n                className: style.form,\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: style.textArea,\n                  value: this.state.questionText,\n                  name: \"tarea\",\n                  rows: \"6\",\n                  cols: \"40\",\n                  placeholder: \" Write text here\",\n                  required: true,\n                  onChange: e => this.setState({\n                    questionText: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  text: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","Button","QuestionAnswerPremium","state","questionAnswerData","showData","selectIndex","showQuestionsNames","questionIndex","handelClick","index","setState","console","log","handelClickQuestion","prevState","getQuestionAnswer","response","fetch","method","crossDomain","headers","Accept","result","json","componentDidMount","render","external","model","map","qA","productButton","userEmail","length","showAllData","h2","questionName","questionText","answerText","form","textArea","e","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/premiumPages/pages/questionAnswerPremium/QuestionAnswerPremium.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../commonComponents/header/Header';\r\nimport style from './questionAnswerPremium.module.css';\r\nimport Button from '../../../commonComponents/button/Button';\r\n\r\n/**\r\n * Description -\r\n */\r\nexport default class QuestionAnswerPremium extends Component {\r\n  state = {\r\n    questionAnswerData: [],\r\n    showData: false,\r\n    selectIndex: null,\r\n    showQuestionsNames: false,\r\n    questionIndex: null,\r\n  };\r\n\r\n  async getQuestionAnswer() {\r\n    const response = await fetch(\r\n      'http://localhost:5000/premiumQuestionAnswer/getData',\r\n      {\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Accept-Control-Allow-Origin': '*',\r\n        },\r\n      }\r\n    );\r\n    const result = await response.json();\r\n    this.setState({ questionAnswerData: result });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuestionAnswer();\r\n  }\r\n\r\n  handelClick = index => {\r\n    this.setState({\r\n      showData: true,\r\n      selectIndex: index,\r\n    });\r\n    console.log(1245)\r\n  };\r\n\r\n  handelClickQuestion = index => {\r\n    this.setState(prevState => ({\r\n      showQuestionsNames: !prevState.showQuestionsNames,\r\n      questionIndex: index,\r\n    }));\r\n\r\n    console.log(this.state.questionAnswerData);\r\n  };\r\n  render() {\r\n    const {\r\n      questionAnswerData,\r\n      showData,\r\n      selectIndex,\r\n      questionIndex,\r\n      showQuestionsNames,\r\n    } = this.state;\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Question Answer' />\r\n        <section className={style.external}>\r\n          <section className={style.model}>\r\n            <h2>List Of Questions/Answers</h2>\r\n            {questionAnswerData.map((qA, index) => (\r\n              <section key={index}>\r\n                 <button\r\n        onClick={() => {\r\n          this.handelClickQuestion(index);\r\n        }}\r\n        className={style.productButton}\r\n      >\r\n        {/* Display the user email only once for each index */}\r\n        {index === questionIndex && showQuestionsNames\r\n          ? qA.userEmail\r\n          : 'Click to Show'}\r\n      </button>\r\n              </section>\r\n            ))}\r\n            {showQuestionsNames &&\r\n              questionIndex !== null &&\r\n              questionIndex < questionAnswerData.length && (\r\n                <section className={style.showAllData}>\r\n                  <button\r\n                    className={style.h2}\r\n                    onClick={() => {\r\n                      this.handelClick(questionIndex);\r\n                    }}\r\n                  >\r\n                    {questionAnswerData[questionIndex].questionName}\r\n                  </button>\r\n                </section>\r\n              )}\r\n          </section>\r\n          {showData &&\r\n            selectIndex !== null &&\r\n            selectIndex < questionAnswerData.length && (\r\n              <section className={style.showAllData}>\r\n                <h2 className={style.h2}>Question/Answer Data</h2>\r\n                <div>\r\n                  <h3>\r\n                    Question Name:\r\n                    {questionAnswerData[selectIndex].questionName}\r\n                  </h3>\r\n                  <h3>\r\n                    Question Text:\r\n                    {questionAnswerData[selectIndex].questionText}\r\n                  </h3>\r\n               \r\n\r\n                \r\n\r\n                  <h3>\r\n                    Question Answer:\r\n                    {questionAnswerData[selectIndex].answerText}\r\n                  </h3>\r\n\r\n                  <section>\r\n                    <form\r\n                      // onSubmit={this.handleSubmit.bind(this)}\r\n                      className={style.form}\r\n                    >\r\n                      <textarea\r\n                        className={style.textArea}\r\n                        value={this.state.questionText}\r\n                        name='tarea'\r\n                        rows='6'\r\n                        cols='40'\r\n                        placeholder=' Write text here'\r\n                        required\r\n                        onChange={e =>\r\n                          this.setState({ questionText: e.target.value })\r\n                        }\r\n                      ></textarea>\r\n\r\n                      <Button type='submit' text='submit' />\r\n\r\n                      {/* {questionAnswerData[selectIndex].haveAnAnswer && (\r\n                        <section className={style.starsLocation}>\r\n                          {[1, 2, 3, 4, 5].map(star => (\r\n                            <span\r\n                              key={star}\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                color:\r\n                                  star <= selectedStars ? 'orange' : 'grey',\r\n                                fontSize: `60px`, // Set the font size to control the star size\r\n                              }}\r\n                              onClick={() => this.handleStarClick(star)}\r\n                            >\r\n                              ★\r\n                            </span>\r\n                          ))}\r\n                        </section>\r\n                      )} */}\r\n                    </form>\r\n                  </section>\r\n                </div>\r\n              </section>\r\n            )}\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}