{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\add\\\\addComponents\\\\addCpu\\\\AddCpu.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../../pageSettings/button/Button';\nimport Layout from '../../../layout/pageLayout/PageLayout';\nimport Header from '../../../../pageSettings/header/Header';\nimport style from '../addMotherboard/addMotherboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class AddCpu extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      model: '',\n      cores: '',\n      threads: '',\n      frequency: '',\n      cache: '',\n      memory_type: '',\n      socket: '',\n      message: \"\"\n    };\n  }\n  async handleSubmit(e) {\n    e.preventDefault();\n    //  const { model, cpu_socket_support, chipset, form_factor } = this.state;\n    console.log(this.state);\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(this.state)\n    };\n    const response = await fetch('http://localhost:5000/insert/cpu', options);\n    const result = await response.json();\n    console.log(result);\n    if (result.sta === 'Model already exist') {\n      this.setState({\n        message: 'Model already exist'\n      });\n      // alert('Model already exist');\n      return;\n    }\n    if (result.status === 'ok') {\n      this.setState({\n        message: 'Component have added'\n      });\n      alert('Component have added');\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Add CPU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit.bind(this),\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Model:\",\n            value: this.state.model,\n            required: true,\n            onChange: e => this.setState({\n              model: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Cors:\",\n            required: true,\n            onChange: e => this.setState({\n              cores: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Threads:\",\n            required: true,\n            onChange: e => this.setState({\n              threads: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Frequency:\",\n            required: true,\n            onChange: e => this.setState({\n              frequency: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Cache:\",\n            required: true,\n            onChange: e => this.setState({\n              cache: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Type:\",\n            required: true,\n            onChange: e => this.setState({\n              memory_type: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Socket Type:\",\n            required: true,\n            onChange: e => this.setState({\n              socket: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), this.state.message !== '' ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","Layout","Header","style","AddCpu","state","model","cores","threads","frequency","cache","memory_type","socket","message","handleSubmit","e","preventDefault","console","log","options","method","crossDomain","headers","Accept","body","JSON","stringify","response","fetch","result","json","sta","setState","status","alert","render","bind","form","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/add/addComponents/addCpu/AddCpu.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../../../../pageSettings/button/Button';\r\nimport Layout from '../../../layout/pageLayout/PageLayout';\r\nimport Header from '../../../../pageSettings/header/Header';\r\nimport style from '../addMotherboard/addMotherboard.module.css';\r\n\r\nexport default class AddCpu extends Component {\r\n  state = {\r\n    model: '',\r\n    cores: '',\r\n    threads: '',\r\n    frequency: '',\r\n    cache: '',\r\n    memory_type: '',\r\n    socket: '',\r\n    message : \"\"\r\n  };\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    //  const { model, cpu_socket_support, chipset, form_factor } = this.state;\r\n    console.log(this.state);\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    };\r\n    const response = await fetch('http://localhost:5000/insert/cpu', options);\r\n    const result = await response.json();\r\n    console.log(result);\r\n    if (result.sta === 'Model already exist') {\r\n      this.setState({ message: 'Model already exist' });\r\n      // alert('Model already exist');\r\n      return;\r\n    }\r\n    if (result.status === 'ok') {\r\n      this.setState({ message: 'Component have added' });\r\n      alert('Component have added');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Header h1Heading='Add CPU' />\r\n        <section>\r\n          <form onSubmit={this.handleSubmit.bind(this)} className={style.form}>\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Model:'\r\n              value={this.state.model}\r\n              required\r\n              onChange={e => this.setState({ model: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Cors:'\r\n              required\r\n              onChange={e => this.setState({ cores: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Threads:'\r\n              required\r\n              onChange={e => this.setState({ threads: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Frequency:'\r\n              required\r\n              onChange={e => this.setState({ frequency: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Cache:'\r\n              required\r\n              onChange={e => this.setState({ cache: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Type:'\r\n              required\r\n              onChange={e => this.setState({ memory_type: e.target.value })}\r\n            />\r\n\r\n            <input\r\n              type='text'\r\n              placeholder='Enter Socket Type:'\r\n              required\r\n              onChange={e => this.setState({ socket: e.target.value })}\r\n            />\r\n\r\n            <Button type='submit' text='submit' />\r\n            {this.state.message !== '' ? <h3>{this.state.message}</h3> : <></>}\r\n          </form>\r\n        </section>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}