{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\userPages\\\\pages\\\\testYourSelf\\\\testWithHelp\\\\TestWithHelp.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport style from './testWithHelp.module.css';\nimport Button from '../../../../commonComponents/button/Button';\nimport Header from '../../../../commonComponents/header/Header';\n\n/**\r\n * Description - This class activate assembly test to the user with help\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TestWithHelp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      testName: '',\n      modelCase: '',\n      modelMotherboard: '',\n      modelCPU: '',\n      modelCPUCooler: '',\n      modelGPU: '',\n      modelPSU: '',\n      modelRAM: '',\n      modelSSD: '',\n      cpuArray: [],\n      gpuArray: [],\n      caseArray: [],\n      cpuCoolerFanArray: [],\n      cpuCoolerLiquidArray: [],\n      fanArray: [],\n      motherboardArray: [],\n      psuArray: [],\n      ramArray: [],\n      ssdM2Array: [],\n      ssdSataArray: [],\n      assembly: [],\n      showResult: ''\n    };\n  }\n  /**\r\n   * Description - This function get all models of all components from database\r\n   */\n  async getModels() {\n    const response = await fetch('http://localhost:5000/getComponentsModels');\n    const result = await response.json();\n    // console.log(result);\n    this.setState({\n      cpuArray: result.Cpu\n    });\n    this.setState({\n      gpuArray: result.Gpu\n    });\n    this.setState({\n      caseArray: result.Case\n    });\n    this.setState({\n      cpuCoolerFanArray: result.CpuCoolerFan\n    });\n    this.setState({\n      cpuCoolerLiquidArray: result.CpuCoolerLiquid\n    });\n    this.setState({\n      motherboardArray: result.Motherboard\n    });\n    this.setState({\n      psuArray: result.Psu\n    });\n    this.setState({\n      ramArray: result.Ram\n    });\n    this.setState({\n      ssdM2Array: result.SsdM2\n    });\n    this.setState({\n      ssdSataArray: result.SsdSata\n    });\n  }\n\n  /**\r\n   *Description - This Function save the choose assembly in the database\r\n   * @param {*} e - Components selected by the admin\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    let chosenOption = null;\n    for (let option of this.state.assembly) {\n      if (this.state.modelMotherboard === option.modelMotherboard) {\n        chosenOption = option;\n        this.setState({\n          currentCpu: chosenOption.modelCPU,\n          currentGPU: chosenOption.modelGPU,\n          currentRAM: chosenOption,\n          currentCase: 'Corsair iCUE 7000X'\n        });\n      }\n    }\n    if (chosenOption) {\n      if (chosenOption.modelCase === this.state.modelCase) {\n        grade += point;\n        this.setState({\n          selectClassCase: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultCase: chosenOption.modelCase,\n          selectClassCase: 'style.selectIncorrect'\n        });\n      }\n      if (chosenOption.modelCPU === this.state.modelCPU) {\n        grade += point;\n        this.setState({\n          selectClassCpu: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultCpu: chosenOption.modelCPU,\n          selectClassCpu: 'style.selectIncorrect'\n        });\n      }\n      if (chosenOption.modelCPUCooler === this.state.modelCPUCooler) {\n        grade += point;\n        this.setState({\n          selectClassCpuCooler: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultCpuCooler: chosenOption.modelCPUCooler,\n          selectClassCpuCooler: 'style.selectIncorrect'\n        });\n      }\n      if (chosenOption.modelGPU === this.state.modelGPU) {\n        grade += point;\n        this.setState({\n          selectClassGpu: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultGpu: chosenOption.modelGPU,\n          selectClassGpu: 'style.selectIncorrect'\n        });\n      }\n      if (chosenOption.modelPSU === this.state.modelPSU) {\n        grade += point;\n        this.setState({\n          selectClassPsu: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultPsu: chosenOption.modelPSU,\n          selectClassPsu: 'style.selectIncorrect'\n        });\n      }\n      if (chosenOption.modelRAM === this.state.modelRAM) {\n        grade += point;\n        this.setState({\n          selectClassRam: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultRam: chosenOption.modelRAM,\n          selectClassRam: 'style.selectIncorrect'\n        });\n      }\n      if (chosenOption.modelSSD === this.state.modelSSD) {\n        grade += point;\n        this.setState({\n          selectClassSsd: 'style.selectCorrect'\n        });\n      } else {\n        this.setState({\n          resultSsd: chosenOption.modelSSD,\n          selectClassSsd: 'style.selectIncorrect'\n        });\n      }\n    }\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(this.state)\n    };\n    const response = await fetch('http://localhost:5000/testWithHelp', options);\n    const result = await response.json();\n    // console.log(result);\n    if (result.status === 'ok') {\n      this.setState({\n        showResult: 'The Test has been added'\n      });\n      setTimeout(() => {\n        this.setState({\n          showResult: '',\n          modelCase: '',\n          modelMotherboard: '',\n          modelCPU: '',\n          modelCPUCooler: '',\n          modelGPU: '',\n          modelPSU: '',\n          modelRAM: '',\n          modelSSD: '',\n          currentMotherboard: '',\n          currentCpu: '',\n          currentCPUCooler: '',\n          currentGPU: '',\n          currentPSU: '',\n          currentRAM: '',\n          currentSSD: '',\n          currentCase: ''\n        });\n      }, 1000);\n    } else if (result.status === 'Test already exist') {\n      this.setState({\n        showResult: 'This test already  exist'\n      });\n    }\n  }\n\n  /**\r\n   * Description - This function display the assembly products\r\n   */\n  async getAssembly() {\n    const response = await fetch('http://localhost:5000/getAssembly');\n    const result = await response.json();\n    result.sort((a, b) => a.assemblyName.localeCompare(b.assemblyName));\n    // console.log(result);\n    this.setState({\n      assembly: result\n    });\n    this.getAssembly();\n  }\n\n  /**\r\n   *Description - This function start when the page is upload and activate the function getModels\r\n   */\n  componentDidMount() {\n    this.getModels();\n    this.getAssembly();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Test With Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit.bind(this),\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input,\n            type: \"text\",\n            placeholder: \"Enter Test Name:\",\n            value: this.state.testName,\n            required: true,\n            onChange: e => this.setState({\n              testName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelMotherboard,\n            label: \"MOTHERBOARD\",\n            onChange: e => {\n              this.setState({\n                modelMotherboard: e.target.value\n              });\n              if (e.target.value === 'ROG STRIX Z790-F GAMING WIFI') {\n                this.setState({\n                  currentCpu: 'i9-12900KF',\n                  currentGPU: 'TUF Gaming GeForce RTX 3070 Ti V2 OC Edition 8GB GDDR6X',\n                  currentRAM: 'Corsair Vengeance 2x32GB DDR5 4800MHz CL40',\n                  currentCase: 'Corsair iCUE 7000X'\n                });\n              }\n              if (e.target.value === 'PRIME H610M-D D4') {\n                this.setState({\n                  currentCpu: 'i5-13400',\n                  currentGPU: 'ASUS TUF GTX 1660 SUPER GAMING OC 6GB GDDR6 DVI HDMI DP',\n                  currentRAM: 'G.Skill Aegis 2x8GB 2666Mhz DDR4 CL19 Kit',\n                  currentCase: 'TUF Gaming GT301'\n                });\n              }\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a Motherboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), this.state.motherboardArray.map(itemMotherboard => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemMotherboard,\n                children: itemMotherboard\n              }, itemMotherboard, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelCPU,\n            label: \"CPU\",\n            onChange: e => {\n              this.setState({\n                modelCPU: e.target.value\n              });\n              if (e.target.value === 'i9-12900KF') {\n                this.setState({\n                  currentCPUCooler: 'H150 RGB 360mm Liquid CPU Cooler'\n                });\n              }\n              if (e.target.value === 'i5-13400') {\n                this.setState({\n                  currentCPUCooler: 'Arctic Alpine 17 CO'\n                });\n              }\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a CPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), this.state.cpuArray.map(itemCpu => {\n              if (this.state.currentCpu === itemCpu) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemCpu,\n                  className: style.nextComp,\n                  children: itemCpu\n                }, itemCpu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemCpu,\n                  children: itemCpu\n                }, itemCpu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelCPUCooler,\n            label: \"CPU Cooler\",\n            onChange: e => {\n              this.setState({\n                modelCPUCooler: e.target.value\n              });\n              if (e.target.value === 'H150 RGB 360mm Liquid CPU Cooler') {\n                this.setState({\n                  currentCase: 'Corsair iCUE 7000X'\n                });\n              }\n              if (e.target.value === 'Arctic Alpine 17 CO') {\n                this.setState({\n                  currentCase: 'TUF Gaming GT301'\n                });\n              }\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a CPU Cooler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), [...this.state.cpuCoolerFanArray, ...this.state.cpuCoolerLiquidArray].map(itemCpuCooler => {\n              if (this.state.currentCPUCooler === itemCpuCooler) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemCpuCooler,\n                  className: style.nextComp,\n                  children: itemCpuCooler\n                }, itemCpuCooler, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemCpuCooler,\n                  children: itemCpuCooler\n                }, itemCpuCooler, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelGPU,\n            label: \"GPU\",\n            onChange: e => {\n              this.setState({\n                modelGPU: e.target.value\n              });\n              if (e.target.value === 'TUF Gaming GeForce RTX 3070 Ti V2 OC Edition 8GB GDDR6X') {\n                this.setState({\n                  currentPSU: 'ROG-THOR-1000P2-GAMING'\n                });\n              }\n              if (e.target.value === 'ASUS TUF GTX 1660 SUPER GAMING OC 6GB GDDR6 DVI HDMI DP') {\n                this.setState({\n                  currentPSU: 'Asus ROG-STRIX 550W GOLD ROG-STRIX-550G'\n                });\n              }\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a GPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), this.state.gpuArray.map(itemGpu => {\n              if (this.state.currentGPU === itemGpu) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemGpu,\n                  className: style.nextComp,\n                  children: itemGpu\n                }, itemGpu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemGpu,\n                  children: itemGpu\n                }, itemGpu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelPSU,\n            label: \"PSU\",\n            onChange: e => this.setState({\n              modelPSU: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a PSU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), this.state.psuArray.map(itemPsu => {\n              if (this.state.currentPSU === itemPsu) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemPsu,\n                  className: style.nextComp,\n                  children: itemPsu\n                }, itemPsu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemPsu,\n                  children: itemPsu\n                }, itemPsu, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 21\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelRAM,\n            label: \"RAM\",\n            onChange: e => this.setState({\n              modelRAM: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a RAM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), this.state.ramArray.map(itemRam => {\n              if (this.state.currentRAM === itemRam) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemRam,\n                  className: style.nextComp,\n                  children: itemRam\n                }, itemRam, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemRam,\n                  children: itemRam\n                }, itemRam, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelSSD,\n            label: \"SSD\",\n            onChange: e => this.setState({\n              modelSSD: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a SSD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), [...this.state.ssdM2Array, ...this.state.ssdSataArray].map(itemSSD => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemSSD,\n                className: style.nextComp,\n                children: itemSSD\n              }, itemSSD, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelCase,\n            label: \"CASE\",\n            onChange: e => this.setState({\n              modelCase: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), this.state.caseArray.map(itemCase => {\n              if (this.state.currentCase === itemCase) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemCase,\n                  className: style.nextComp,\n                  children: itemCase\n                }, itemCase, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: itemCase,\n                  children: itemCase\n                }, itemCase, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"save test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.showResult,\n            children: this.state.showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","style","Button","Header","TestWithHelp","state","testName","modelCase","modelMotherboard","modelCPU","modelCPUCooler","modelGPU","modelPSU","modelRAM","modelSSD","cpuArray","gpuArray","caseArray","cpuCoolerFanArray","cpuCoolerLiquidArray","fanArray","motherboardArray","psuArray","ramArray","ssdM2Array","ssdSataArray","assembly","showResult","getModels","response","fetch","result","json","setState","Cpu","Gpu","Case","CpuCoolerFan","CpuCoolerLiquid","Motherboard","Psu","Ram","SsdM2","SsdSata","handleSubmit","e","preventDefault","chosenOption","option","currentCpu","currentGPU","currentRAM","currentCase","grade","point","selectClassCase","resultCase","selectClassCpu","resultCpu","selectClassCpuCooler","resultCpuCooler","selectClassGpu","resultGpu","selectClassPsu","resultPsu","selectClassRam","resultRam","selectClassSsd","resultSsd","options","method","crossDomain","headers","Accept","body","JSON","stringify","status","setTimeout","currentMotherboard","currentCPUCooler","currentPSU","currentSSD","getAssembly","sort","a","b","assemblyName","localeCompare","componentDidMount","render","bind","form","input","target","value","select","map","itemMotherboard","itemCpu","nextComp","itemCpuCooler","itemGpu","itemPsu","itemRam","itemSSD","itemCase"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/userPages/pages/testYourSelf/testWithHelp/TestWithHelp.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport style from './testWithHelp.module.css';\r\nimport Button from '../../../../commonComponents/button/Button';\r\nimport Header from '../../../../commonComponents/header/Header';\r\n\r\n/**\r\n * Description - This class activate assembly test to the user with help\r\n */\r\nexport default class TestWithHelp extends Component {\r\n  state = {\r\n    testName: '',\r\n    modelCase: '',\r\n    modelMotherboard: '',\r\n    modelCPU: '',\r\n    modelCPUCooler: '',\r\n    modelGPU: '',\r\n    modelPSU: '',\r\n    modelRAM: '',\r\n    modelSSD: '',\r\n    cpuArray: [],\r\n    gpuArray: [],\r\n    caseArray: [],\r\n    cpuCoolerFanArray: [],\r\n    cpuCoolerLiquidArray: [],\r\n    fanArray: [],\r\n    motherboardArray: [],\r\n    psuArray: [],\r\n    ramArray: [],\r\n    ssdM2Array: [],\r\n    ssdSataArray: [],\r\n    assembly: [],\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function get all models of all components from database\r\n   */\r\n  async getModels() {\r\n    const response = await fetch('http://localhost:5000/getComponentsModels');\r\n    const result = await response.json();\r\n    // console.log(result);\r\n    this.setState({ cpuArray: result.Cpu });\r\n    this.setState({ gpuArray: result.Gpu });\r\n    this.setState({ caseArray: result.Case });\r\n    this.setState({ cpuCoolerFanArray: result.CpuCoolerFan });\r\n    this.setState({ cpuCoolerLiquidArray: result.CpuCoolerLiquid });\r\n    this.setState({ motherboardArray: result.Motherboard });\r\n    this.setState({ psuArray: result.Psu });\r\n    this.setState({ ramArray: result.Ram });\r\n    this.setState({ ssdM2Array: result.SsdM2 });\r\n    this.setState({ ssdSataArray: result.SsdSata });\r\n  }\r\n\r\n  /**\r\n   *Description - This Function save the choose assembly in the database\r\n   * @param {*} e - Components selected by the admin\r\n   */\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n     let chosenOption = null;\r\n     for (let option of this.state.assembly) {\r\n       if (this.state.modelMotherboard === option.modelMotherboard) {\r\n         chosenOption = option;\r\n          this.setState({\r\n            currentCpu: chosenOption.modelCPU,\r\n            currentGPU:\r\n              chosenOption.modelGPU,\r\n            currentRAM: chosenOption,\r\n            currentCase: 'Corsair iCUE 7000X',\r\n          });\r\n\r\n       }\r\n     }\r\n     if (chosenOption) {\r\n       if (chosenOption.modelCase === this.state.modelCase) {\r\n         grade += point;\r\n         this.setState({ selectClassCase: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultCase: chosenOption.modelCase,\r\n           selectClassCase: 'style.selectIncorrect',\r\n         });\r\n       }\r\n       if (chosenOption.modelCPU === this.state.modelCPU) {\r\n         grade += point;\r\n         this.setState({ selectClassCpu: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultCpu: chosenOption.modelCPU,\r\n           selectClassCpu: 'style.selectIncorrect',\r\n         });\r\n       }\r\n       if (chosenOption.modelCPUCooler === this.state.modelCPUCooler) {\r\n         grade += point;\r\n         this.setState({ selectClassCpuCooler: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultCpuCooler: chosenOption.modelCPUCooler,\r\n           selectClassCpuCooler: 'style.selectIncorrect',\r\n         });\r\n       }\r\n\r\n       if (chosenOption.modelGPU === this.state.modelGPU) {\r\n         grade += point;\r\n         this.setState({ selectClassGpu: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultGpu: chosenOption.modelGPU,\r\n           selectClassGpu: 'style.selectIncorrect',\r\n         });\r\n       }\r\n       if (chosenOption.modelPSU === this.state.modelPSU) {\r\n         grade += point;\r\n         this.setState({ selectClassPsu: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultPsu: chosenOption.modelPSU,\r\n           selectClassPsu: 'style.selectIncorrect',\r\n         });\r\n       }\r\n       if (chosenOption.modelRAM === this.state.modelRAM) {\r\n         grade += point;\r\n         this.setState({ selectClassRam: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultRam: chosenOption.modelRAM,\r\n           selectClassRam: 'style.selectIncorrect',\r\n         });\r\n       }\r\n       if (chosenOption.modelSSD === this.state.modelSSD) {\r\n         grade += point;\r\n         this.setState({ selectClassSsd: 'style.selectCorrect' });\r\n       } else {\r\n         this.setState({\r\n           resultSsd: chosenOption.modelSSD,\r\n           selectClassSsd: 'style.selectIncorrect',\r\n         });\r\n       }\r\n     }\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    };\r\n    const response = await fetch('http://localhost:5000/testWithHelp', options);\r\n    const result = await response.json();\r\n    // console.log(result);\r\n    if (result.status === 'ok') {\r\n      this.setState({\r\n        showResult: 'The Test has been added',\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n          modelCase: '',\r\n          modelMotherboard: '',\r\n          modelCPU: '',\r\n          modelCPUCooler: '',\r\n          modelGPU: '',\r\n          modelPSU: '',\r\n          modelRAM: '',\r\n          modelSSD: '',\r\n          currentMotherboard: '',\r\n          currentCpu: '',\r\n          currentCPUCooler: '',\r\n          currentGPU: '',\r\n          currentPSU: '',\r\n          currentRAM: '',\r\n          currentSSD: '',\r\n          currentCase: '',\r\n        });\r\n      }, 1000);\r\n    } else if (result.status === 'Test already exist') {\r\n      this.setState({\r\n        showResult: 'This test already  exist',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Description - This function display the assembly products\r\n   */\r\n  async getAssembly() {\r\n    const response = await fetch('http://localhost:5000/getAssembly');\r\n    const result = await response.json();\r\n    result.sort((a, b) => a.assemblyName.localeCompare(b.assemblyName));\r\n    // console.log(result);\r\n    this.setState({ assembly: result });\r\n    this.getAssembly();\r\n  }\r\n\r\n  /**\r\n   *Description - This function start when the page is upload and activate the function getModels\r\n   */\r\n  componentDidMount() {\r\n    this.getModels();\r\n    this.getAssembly();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Test With Help' />\r\n        <section>\r\n          <form onSubmit={this.handleSubmit.bind(this)} className={style.form}>\r\n            <input\r\n              className={style.input}\r\n              type='text'\r\n              placeholder='Enter Test Name:'\r\n              value={this.state.testName}\r\n              required\r\n              onChange={e => this.setState({ testName: e.target.value })}\r\n            />\r\n\r\n            {/* motherboard */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelMotherboard}\r\n              label='MOTHERBOARD'\r\n              onChange={e => {\r\n                this.setState({ modelMotherboard: e.target.value });\r\n                if (e.target.value === 'ROG STRIX Z790-F GAMING WIFI') {\r\n                  this.setState({\r\n                    currentCpu: 'i9-12900KF',\r\n                    currentGPU:\r\n                      'TUF Gaming GeForce RTX 3070 Ti V2 OC Edition 8GB GDDR6X',\r\n                    currentRAM: 'Corsair Vengeance 2x32GB DDR5 4800MHz CL40',\r\n                    currentCase: 'Corsair iCUE 7000X',\r\n                  });\r\n                }\r\n                if (e.target.value === 'PRIME H610M-D D4') {\r\n                  this.setState({\r\n                    currentCpu: 'i5-13400',\r\n                    currentGPU:\r\n                      'ASUS TUF GTX 1660 SUPER GAMING OC 6GB GDDR6 DVI HDMI DP',\r\n                    currentRAM: 'G.Skill Aegis 2x8GB 2666Mhz DDR4 CL19 Kit',\r\n                    currentCase: 'TUF Gaming GT301',\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a Motherboard\r\n              </option>\r\n              {this.state.motherboardArray.map(itemMotherboard => {\r\n                return (\r\n                  <option key={itemMotherboard} value={itemMotherboard}>\r\n                    {itemMotherboard}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n\r\n            {/* cpu */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelCPU}\r\n              label='CPU'\r\n              onChange={e => {\r\n                this.setState({ modelCPU: e.target.value });\r\n                if (e.target.value === 'i9-12900KF') {\r\n                  this.setState({\r\n                    currentCPUCooler: 'H150 RGB 360mm Liquid CPU Cooler',\r\n                  });\r\n                }\r\n                if (e.target.value === 'i5-13400') {\r\n                  this.setState({ currentCPUCooler: 'Arctic Alpine 17 CO' });\r\n                }\r\n              }}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a CPU\r\n              </option>\r\n              {this.state.cpuArray.map(itemCpu => {\r\n                if (this.state.currentCpu === itemCpu) {\r\n                  return (\r\n                    <option\r\n                      key={itemCpu}\r\n                      value={itemCpu}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemCpu}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option key={itemCpu} value={itemCpu}>\r\n                      {itemCpu}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n\r\n            {/* cpu cooler */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelCPUCooler}\r\n              label='CPU Cooler'\r\n              onChange={e => {\r\n                this.setState({ modelCPUCooler: e.target.value });\r\n                if (e.target.value === 'H150 RGB 360mm Liquid CPU Cooler') {\r\n                  this.setState({\r\n                    currentCase: 'Corsair iCUE 7000X',\r\n                  });\r\n                }\r\n                if (e.target.value === 'Arctic Alpine 17 CO') {\r\n                  this.setState({ currentCase: 'TUF Gaming GT301' });\r\n                }\r\n              }}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a CPU Cooler\r\n              </option>\r\n              {[\r\n                ...this.state.cpuCoolerFanArray,\r\n                ...this.state.cpuCoolerLiquidArray,\r\n              ].map(itemCpuCooler => {\r\n                if (this.state.currentCPUCooler === itemCpuCooler) {\r\n                  return (\r\n                    <option\r\n                      key={itemCpuCooler}\r\n                      value={itemCpuCooler}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemCpuCooler}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option key={itemCpuCooler} value={itemCpuCooler}>\r\n                      {itemCpuCooler}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n\r\n            {/* gpu */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelGPU}\r\n              label='GPU'\r\n              onChange={e => {\r\n                this.setState({ modelGPU: e.target.value });\r\n                if (\r\n                  e.target.value ===\r\n                  'TUF Gaming GeForce RTX 3070 Ti V2 OC Edition 8GB GDDR6X'\r\n                ) {\r\n                  this.setState({\r\n                    currentPSU: 'ROG-THOR-1000P2-GAMING',\r\n                  });\r\n                }\r\n                if (\r\n                  e.target.value ===\r\n                  'ASUS TUF GTX 1660 SUPER GAMING OC 6GB GDDR6 DVI HDMI DP'\r\n                ) {\r\n                  this.setState({\r\n                    currentPSU: 'Asus ROG-STRIX 550W GOLD ROG-STRIX-550G',\r\n                  });\r\n                }\r\n              }}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a GPU\r\n              </option>\r\n              {this.state.gpuArray.map(itemGpu => {\r\n                if (this.state.currentGPU === itemGpu) {\r\n                  return (\r\n                    <option\r\n                      key={itemGpu}\r\n                      value={itemGpu}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemGpu}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option key={itemGpu} value={itemGpu}>\r\n                      {itemGpu}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n\r\n            {/* psu */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelPSU}\r\n              label='PSU'\r\n              onChange={e => this.setState({ modelPSU: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a PSU\r\n              </option>\r\n              {this.state.psuArray.map(itemPsu => {\r\n                if (this.state.currentPSU === itemPsu) {\r\n                  return (\r\n                    <option\r\n                      key={itemPsu}\r\n                      value={itemPsu}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemPsu}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option key={itemPsu} value={itemPsu}>\r\n                      {itemPsu}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n\r\n            {/* ram */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelRAM}\r\n              label='RAM'\r\n              onChange={e => this.setState({ modelRAM: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a RAM\r\n              </option>\r\n              {this.state.ramArray.map(itemRam => {\r\n                if (this.state.currentRAM === itemRam) {\r\n                  return (\r\n                    <option\r\n                      key={itemRam}\r\n                      value={itemRam}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemRam}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option key={itemRam} value={itemRam}>\r\n                      {itemRam}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n\r\n            {/* ssd */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelSSD}\r\n              label='SSD'\r\n              onChange={e => this.setState({ modelSSD: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a SSD\r\n              </option>\r\n              {[...this.state.ssdM2Array, ...this.state.ssdSataArray].map(\r\n                itemSSD => {\r\n                  return (\r\n                    <option\r\n                      key={itemSSD}\r\n                      value={itemSSD}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemSSD}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n            </select>\r\n\r\n            {/* case */}\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelCase}\r\n              label='CASE'\r\n              onChange={e => this.setState({ modelCase: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a Case\r\n              </option>\r\n              {this.state.caseArray.map(itemCase => {\r\n                if (this.state.currentCase === itemCase) {\r\n                  return (\r\n                    <option\r\n                      key={itemCase}\r\n                      value={itemCase}\r\n                      className={style.nextComp}\r\n                    >\r\n                      {itemCase}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <option key={itemCase} value={itemCase}>\r\n                      {itemCase}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            <Button type='submit' text='save test' />\r\n            <p className={style.showResult}>{this.state.showResult}</p>\r\n          </form>\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}