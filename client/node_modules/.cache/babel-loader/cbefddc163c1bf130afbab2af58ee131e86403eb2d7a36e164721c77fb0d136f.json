{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\commonComponents\\\\userDetails\\\\UserDetails.js\";\nimport React, { Component } from 'react';\nimport Button from '../button/Button';\nimport style from './userDetails.module.css';\nimport LinkLayout from '../linkLayout/LinkLayout';\n\n/**\r\n * Description - This class show the user data and can change the user data\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserData extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userData: '',\n      oldUser: '',\n      showLinkAdmin: false,\n      password: '',\n      email: '',\n      name: '',\n      showResult: ''\n    };\n    this.logout = () => {\n      // Clearing localStorage\n      window.localStorage.clear();\n      // Redirecting to the home page\n      window.location.href = './';\n    };\n    this.changePassword = () => {\n      if (!this.checkPassword()) {\n        this.setState({\n          showResult: 'Invalid Password'\n        });\n        setTimeout(() => {\n          this.setState({\n            showResult: ''\n          });\n        }, 1000);\n      } else {\n        let user = this.state.userData;\n        fetch('http://localhost:5000/userData/changePassword', {\n          method: 'POST',\n          crossDomain: true,\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: JSON.stringify({\n            user: {\n              ...user,\n              password: this.state.password\n            },\n            email: this.state.userData.email\n          })\n        }).then(res => res.json()).then(data => {\n          console.log(data);\n          this.setState({\n            userData: {\n              ...user,\n              password: this.state.password\n            }\n          });\n          setTimeout(() => {\n            this.setState({\n              showResult: 'Password have been change'\n            });\n          }, 1000);\n        });\n      }\n    };\n    this.changeName = () => {\n      if (!this.checkName()) {\n        this.setState({\n          showResult: 'Invalid User Name'\n        });\n        setTimeout(() => {\n          this.setState({\n            showResult: ''\n          });\n        }, 1000);\n      } else {\n        let user = this.state.userData;\n        fetch('http://localhost:5000/userData/changeNameOrEmail', {\n          method: 'POST',\n          crossDomain: true,\n          headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: JSON.stringify({\n            user: {\n              ...user,\n              fullName: this.state.name\n            },\n            email: this.state.userData.email\n          })\n        }).then(res => res.json()).then(data => {\n          console.log(data);\n          this.setState({\n            userData: {\n              ...user,\n              fullName: this.state.name\n            }\n          });\n          setTimeout(() => {\n            this.setState({\n              showResult: 'Name have been change'\n            });\n          }, 1000);\n        });\n      }\n    };\n    this.changeEmail = () => {\n      let user = this.state.userData;\n      fetch('http://localhost:5000/userData/changeNameOrEmail', {\n        method: 'POST',\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          user: {\n            ...user,\n            email: this.state.email\n          },\n          email: this.state.oldUser.email\n        })\n      }).then(res => res.json()).then(data => {\n        localStorage.setItem('token', data.token);\n        console.log(data);\n        this.setState({\n          userData: {\n            ...user,\n            email: this.state.email\n          }\n        });\n        // console.log(this.state.userData);\n        setTimeout(() => {\n          this.setState({\n            showResult: 'Email have been change'\n          });\n        }, 1000);\n      });\n    };\n  }\n  /**\r\n   * Description - This function get the user data from the sever\r\n   */\n  componentDidMount() {\n    fetch('http://localhost:5000/userData', {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        token: window.localStorage.getItem('token')\n      })\n    }).then(res => res.json()).then(data => {\n      // console.log(data, 'userData');\n      // Storing the user data in localStorage\n      window.localStorage.setItem('user', JSON.stringify(data.data));\n      this.setState({\n        userData: data.data\n      });\n      this.setState({\n        oldUser: data.data\n      });\n      // console.log(this.state.oldUser);\n      if (this.state.userData.userType === 'Admin') {\n        this.setState({\n          showLinkAdmin: true\n        });\n      }\n    });\n  }\n\n  /**\r\n   * Description - This function clear the local storage in the application\r\n   */\n\n  /**\r\n   * Description - This function check the password\r\n   * @returns True if the password contain 3-8 characters and and have at least 1 letter and 1 number and False otherwise\r\n   */\n  checkPassword() {\n    if (this.state.password === '') {\n      return false;\n    }\n    if (!(/\\d/.test(this.state.password) && /[a-zA-Z]/.test(this.state.password))) {\n      return false;\n    }\n    if (this.state.password.length < 3 || this.state.password.length > 8) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\r\n   * Description - This function change the name of the user\r\n   */\n\n  /**\r\n   * Description - This function check if the fullName contain only letters and at least 2 letters\r\n   * @param {*} fullName - Full name entered by the user\r\n   * @returns - True if fullName contain only letters and at least 2 letters and False otherwise\r\n   */\n  checkName() {\n    let name = this.state.name;\n    // console.log(name);\n    name = name.replace(' ', '');\n    // console.log(name);\n    if (name === '') {\n      return false;\n    }\n    const onlyLetters = /^[A-Za-z\\s]+$/;\n    if (!onlyLetters.test(name)) {\n      return false;\n    }\n    const letterCount = name.replace(/[^a-zA-Z]/g, '').length;\n    if (letterCount < 2) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\r\n   * Description - This function change the email of the user\r\n   */\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.div,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.userDetails,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.span,\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), this.state.userData.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.span,\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), this.state.userData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.div,\n          children: [' ', /*#__PURE__*/_jsxDEV(Button, {\n            text: \"sign out\",\n            fun: this.logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), this.state.showLinkAdmin && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.linkAdmin,\n        children: /*#__PURE__*/_jsxDEV(LinkLayout, {\n          nameLink: \"Transfer to Admin home Page\",\n          toLink: \"/adminHome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: style.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Change your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: style.sectionInput,\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.p,\n              children: \"Require only letters and at least 2 letters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.input,\n              type: \"text\",\n              placeholder: \"Enter name\",\n              onChange: e => this.setState({\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Change\",\n              fun: this.changeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.input,\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: e => this.setState({\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Change\",\n              fun: this.changeEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.p,\n              children: \"Require 3-8 characters with at least 1 numbers and 1 latter's\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.input,\n              type: \"password\",\n              placeholder: \"Enter password\",\n              onChange: e => this.setState({\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Change\",\n              fun: this.changePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.showResult,\n            children: this.state.showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","style","LinkLayout","UserData","state","userData","oldUser","showLinkAdmin","password","email","name","showResult","logout","window","localStorage","clear","location","href","changePassword","checkPassword","setState","setTimeout","user","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","then","res","json","data","console","log","changeName","checkName","fullName","changeEmail","setItem","token","componentDidMount","getItem","userType","test","length","replace","onlyLetters","letterCount","render","div","userDetails","span","linkAdmin","section","sectionInput","p","input","e","target","value"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/commonComponents/userDetails/UserDetails.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '../button/Button';\r\nimport style from './userDetails.module.css';\r\nimport LinkLayout from '../linkLayout/LinkLayout';\r\n\r\n/**\r\n * Description - This class show the user data and can change the user data\r\n */\r\nexport default class UserData extends Component {\r\n  state = {\r\n    userData: '',\r\n    oldUser: '',\r\n    showLinkAdmin: false,\r\n    password: '',\r\n    email: '',\r\n    name: '',\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function get the user data from the sever\r\n   */\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/userData', {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify({\r\n        token: window.localStorage.getItem('token'),\r\n      }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(data, 'userData');\r\n        // Storing the user data in localStorage\r\n        window.localStorage.setItem('user', JSON.stringify(data.data));\r\n        this.setState({ userData: data.data });\r\n        this.setState({ oldUser: data.data });\r\n        // console.log(this.state.oldUser);\r\n        if (this.state.userData.userType === 'Admin') {\r\n          this.setState({\r\n            showLinkAdmin: true,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Description - This function clear the local storage in the application\r\n   */\r\n  logout = () => {\r\n    // Clearing localStorage\r\n    window.localStorage.clear();\r\n    // Redirecting to the home page\r\n    window.location.href = './';\r\n  };\r\n\r\n  /**\r\n   * Description - This function change the password of the user\r\n   */\r\n  changePassword = () => {\r\n    if (!this.checkPassword()) {\r\n      this.setState({ showResult: 'Invalid Password' });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      let user = this.state.userData;\r\n      fetch('http://localhost:5000/userData/changePassword', {\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        body: JSON.stringify({\r\n          user: { ...user, password: this.state.password },\r\n          email: this.state.userData.email,\r\n        }),\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          this.setState({\r\n            userData: { ...user, password: this.state.password },\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              showResult: 'Password have been change',\r\n            });\r\n          }, 1000);\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Description - This function check the password\r\n   * @returns True if the password contain 3-8 characters and and have at least 1 letter and 1 number and False otherwise\r\n   */\r\n  checkPassword() {\r\n    if (this.state.password === '') {\r\n      return false;\r\n    }\r\n    if (\r\n      !(/\\d/.test(this.state.password) && /[a-zA-Z]/.test(this.state.password))\r\n    ) {\r\n      return false;\r\n    }\r\n    if (this.state.password.length < 3 || this.state.password.length > 8) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Description - This function change the name of the user\r\n   */\r\n  changeName = () => {\r\n    if (!this.checkName()) {\r\n      this.setState({ showResult: 'Invalid User Name' });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      let user = this.state.userData;\r\n      fetch('http://localhost:5000/userData/changeNameOrEmail', {\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        body: JSON.stringify({\r\n          user: { ...user, fullName: this.state.name },\r\n          email: this.state.userData.email,\r\n        }),\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          this.setState({ userData: { ...user, fullName: this.state.name } });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              showResult: 'Name have been change',\r\n            });\r\n          }, 1000);\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Description - This function check if the fullName contain only letters and at least 2 letters\r\n   * @param {*} fullName - Full name entered by the user\r\n   * @returns - True if fullName contain only letters and at least 2 letters and False otherwise\r\n   */\r\n  checkName() {\r\n    let name = this.state.name;\r\n    // console.log(name);\r\n    name = name.replace(' ', '');\r\n    // console.log(name);\r\n    if (name === '') {\r\n      return false;\r\n    }\r\n    const onlyLetters = /^[A-Za-z\\s]+$/;\r\n    if (!onlyLetters.test(name)) {\r\n      return false;\r\n    }\r\n\r\n    const letterCount = name.replace(/[^a-zA-Z]/g, '').length;\r\n    if (letterCount < 2) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Description - This function change the email of the user\r\n   */\r\n  changeEmail = () => {\r\n    let user = this.state.userData;\r\n    fetch('http://localhost:5000/userData/changeNameOrEmail', {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify({\r\n        user: { ...user, email: this.state.email },\r\n        email: this.state.oldUser.email,\r\n      }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        localStorage.setItem('token', data.token);\r\n        console.log(data);\r\n        this.setState({ userData: { ...user, email: this.state.email } });\r\n        // console.log(this.state.userData);\r\n        setTimeout(() => {\r\n          this.setState({\r\n            showResult: 'Email have been change',\r\n          });\r\n        }, 1000);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.div}>\r\n        <section className={style.userDetails}>\r\n          <p>\r\n            <span className={style.span}>Name:</span>\r\n            {this.state.userData.fullName}\r\n          </p>\r\n\r\n          <p>\r\n            <span className={style.span}>Email:</span>\r\n            {this.state.userData.email}\r\n          </p>\r\n          <div className={style.div}>\r\n            {' '}\r\n            <Button text='sign out' fun={this.logout} />\r\n          </div>\r\n        </section>\r\n\r\n        {this.state.showLinkAdmin && (\r\n          <section className={style.linkAdmin}>\r\n            <LinkLayout\r\n              nameLink='Transfer to Admin home Page'\r\n              toLink='/adminHome'\r\n            />\r\n          </section>\r\n        )}\r\n\r\n        <section className={style.section}>\r\n          <h2>Change your details</h2>\r\n          <section className={style.sectionInput}>\r\n            <section>\r\n              <p className={style.p}>\r\n                Require only letters and at least 2 letters\r\n              </p>\r\n              <input\r\n                className={style.input}\r\n                type='text'\r\n                placeholder='Enter name'\r\n                onChange={e => this.setState({ name: e.target.value })}\r\n              />\r\n              <Button text='Change' fun={this.changeName} />\r\n            </section>\r\n\r\n            <section>\r\n              <input\r\n                className={style.input}\r\n                type='email'\r\n                placeholder='Enter email'\r\n                onChange={e => this.setState({ email: e.target.value })}\r\n              />\r\n              <Button text='Change' fun={this.changeEmail} />\r\n            </section>\r\n\r\n            <section>\r\n              <p className={style.p}>\r\n                Require 3-8 characters with at least 1 numbers and 1 latter's\r\n              </p>\r\n              <input\r\n                className={style.input}\r\n                type='password'\r\n                placeholder='Enter password'\r\n                onChange={e => this.setState({ password: e.target.value })}\r\n              />\r\n\r\n              <Button text='Change' fun={this.changePassword} />\r\n            </section>\r\n            <p className={style.showResult}>{this.state.showResult}</p>\r\n          </section>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}