{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\userPages\\\\pages\\\\testYourSelf\\\\testWithoutHelp\\\\TestWithoutHelp.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../commonComponents/header/Header';\nimport Button from '../../../../commonComponents/button/Button';\nimport style from './testWithoutHelp.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet options = [{\n  case: 'Corsair iCUE 7000X',\n  motherboard: 'ROG STRIX Z790-F GAMING WIFI',\n  cpu: 'i9-12900KF',\n  gpu: 'TUF Gaming GeForce RTX 3070 Ti V2 OC Edition 8GB GDDR6X',\n  liquid_cpu_cooler: 'H150 RGB 360mm Liquid CPU Cooler',\n  psu: 'ROG-STRIX-750G',\n  ram: 'Corsair Vengeance 2x32GB DDR5 4800MHz CL40',\n  storage: 'Samsung 980 PRO M.2 NVMe 1TB SSD',\n  fan: 'none'\n}, {\n  case: 'TUF Gaming GT301',\n  motherboard: 'PRIME H610M-D D4',\n  cpu: 'i5-13400',\n  gpu: 'ASUS TUF GTX 1660 SUPER GAMING OC 6GB GDDR6 DVI HDMI DP',\n  fan_cpu_cooler: 'Arctic Alpine 17 CO',\n  psu: 'Asus ROG-STRIX 550W GOLD ROG-STRIX-550G',\n  ram: 'G.Skill Aegis 2x8GB 2666Mhz DDR4 CL19 Kit',\n  storage: 'Kingston NV2 PCIe 4.0 x4 NVMe M.2 2280 1TB SSD',\n  fan: 'none'\n}];\n/**\r\n * Description -\r\n */\nexport default class TestWithoutHelp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      testName: '',\n      modelCase: '',\n      modelMotherboard: '',\n      modelCPU: '',\n      modelCPUCooler: '',\n      modelGPU: '',\n      modelPSU: '',\n      modelRAM: '',\n      modelSSD: '',\n      cpuArray: [],\n      gpuArray: [],\n      caseArray: [],\n      cpuCoolerFanArray: [],\n      cpuCoolerLiquidArray: [],\n      fanArray: [],\n      motherboardArray: [],\n      psuArray: [],\n      ramArray: [],\n      ssdM2Array: [],\n      ssdSataArray: [],\n      showResult: ''\n    };\n  }\n  /**\r\n   * Description - This function get all models of all components from database\r\n   */\n  async getModels() {\n    const response = await fetch('http://localhost:5000/getComponentsModels');\n    const result = await response.json();\n    console.log(result);\n    this.setState({\n      cpuArray: result.Cpu\n    });\n    this.setState({\n      gpuArray: result.Gpu\n    });\n    this.setState({\n      caseArray: result.Case\n    });\n    this.setState({\n      cpuCoolerFanArray: result.CpuCoolerFan\n    });\n    this.setState({\n      cpuCoolerLiquidArray: result.CpuCoolerLiquid\n    });\n    this.setState({\n      motherboardArray: result.Motherboard\n    });\n    this.setState({\n      psuArray: result.Psu\n    });\n    this.setState({\n      ramArray: result.Ram\n    });\n    this.setState({\n      ssdM2Array: result.SsdM2\n    });\n    this.setState({\n      ssdSataArray: result.SsdSata\n    });\n  }\n\n  /**\r\n   *Description - This Function save the choose assembly in the database\r\n   * @param {*} e - Components selected by the admin\r\n   */\n  async handleSubmit(e) {\n    e.preventDefault();\n    let grade = 0;\n    let chosenOption = null;\n    for (let option of options) {\n      if (this.state.motherboard === option.motherboard) chosenOption = option;\n    }\n    if (chosenOption.case === this.state.modelCase) grade = grade + 10;\n    if (chosenOption.cpu === this.state.modelCPU) grade = grade + 10;\n    if (chosenOption.case === this.state.modelCPUCooler) grade = grade + 10;\n    if (chosenOption.case === this.state.modelGPU) grade = grade + 10;\n    if (chosenOption.case === this.state.modelPSU) grade = grade + 10;\n    if (chosenOption.case === this.state.modelRAM) grade = grade + 10;\n    if (chosenOption.case === this.state.modelSSD) grade = grade + 10;\n    if (chosenOption.case === this.state.modelCase) grade = grade + 10;\n    if (chosenOption.case === this.state.modelCase) grade = grade + 10;\n    const options = {\n      method: 'POST',\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'Accept-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(this.state)\n    };\n    const response = await fetch('http://localhost:5000/testWithoutHelp', options);\n    const result = await response.json();\n    console.log(result);\n    if (result.status === 'ok') {\n      this.setState({\n        showResult: 'The Test has been added'\n      });\n      setTimeout(() => {\n        this.setState({\n          showResult: '',\n          modelCase: '',\n          modelMotherboard: '',\n          modelCPU: '',\n          modelCPUCooler: '',\n          modelGPU: '',\n          modelPSU: '',\n          modelRAM: '',\n          modelSSD: ''\n        });\n      }, 1000);\n    } else if (result.status === 'Test already exist') {\n      this.setState({\n        showResult: 'This test already  exist'\n      });\n    }\n  }\n\n  /**\r\n   *Description - This function start when the page is upload and activate the function getModels\r\n   */\n  componentDidMount() {\n    this.getModels();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Test Without Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit.bind(this),\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input,\n            type: \"text\",\n            placeholder: \"Enter Test Name:\",\n            value: this.state.testName,\n            required: true,\n            onChange: e => this.setState({\n              assemblyName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelMotherboard,\n            label: \"MOTHERBOARD\",\n            onChange: e => this.setState({\n              modelMotherboard: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a Motherboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), this.state.motherboardArray.map(itemMotherboard => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemMotherboard,\n                children: itemMotherboard\n              }, itemMotherboard, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelCPU,\n            label: \"CPU\",\n            onChange: e => this.setState({\n              modelCPU: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a CPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), this.state.cpuArray.map(itemCpu => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemCpu,\n                children: itemCpu\n              }, itemCpu, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelCPUCooler,\n            label: \"CPU Cooler\",\n            onChange: e => this.setState({\n              modelCPUCooler: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a CPU Cooler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), [...this.state.cpuCoolerFanArray, ...this.state.cpuCoolerLiquidArray].map(itemCpuCooler => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemCpuCooler,\n                children: itemCpuCooler\n              }, itemCpuCooler, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelGPU,\n            label: \"GPU\",\n            onChange: e => this.setState({\n              modelGPU: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a GPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), this.state.gpuArray.map(itemGpu => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemGpu,\n                children: itemGpu\n              }, itemGpu, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelPSU,\n            label: \"PSU\",\n            onChange: e => this.setState({\n              modelPSU: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a PSU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), this.state.psuArray.map(itemPsu => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemPsu,\n                children: itemPsu\n              }, itemPsu, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelRAM,\n            label: \"RAM\",\n            onChange: e => this.setState({\n              modelRAM: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a RAM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), this.state.ramArray.map(itemRam => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemRam,\n                children: itemRam\n              }, itemRam, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelSSD,\n            label: \"SSD\",\n            onChange: e => this.setState({\n              modelSSD: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a SSD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), [...this.state.ssdM2Array, ...this.state.ssdSataArray].map(itemSSD => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemSSD,\n                children: itemSSD\n              }, itemSSD, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: style.select,\n            value: this.state.modelCase,\n            label: \"CASE\",\n            onChange: e => this.setState({\n              modelCase: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), this.state.caseArray.map(itemCase => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: itemCase,\n                children: itemCase\n              }, itemCase, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            text: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.showResult,\n            children: this.state.showResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","Button","style","options","case","motherboard","cpu","gpu","liquid_cpu_cooler","psu","ram","storage","fan","fan_cpu_cooler","TestWithoutHelp","state","testName","modelCase","modelMotherboard","modelCPU","modelCPUCooler","modelGPU","modelPSU","modelRAM","modelSSD","cpuArray","gpuArray","caseArray","cpuCoolerFanArray","cpuCoolerLiquidArray","fanArray","motherboardArray","psuArray","ramArray","ssdM2Array","ssdSataArray","showResult","getModels","response","fetch","result","json","console","log","setState","Cpu","Gpu","Case","CpuCoolerFan","CpuCoolerLiquid","Motherboard","Psu","Ram","SsdM2","SsdSata","handleSubmit","e","preventDefault","grade","chosenOption","option","method","crossDomain","headers","Accept","body","JSON","stringify","status","setTimeout","componentDidMount","render","bind","form","input","assemblyName","target","value","select","map","itemMotherboard","itemCpu","itemCpuCooler","itemGpu","itemPsu","itemRam","itemSSD","itemCase"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/userPages/pages/testYourSelf/testWithoutHelp/TestWithoutHelp.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../commonComponents/header/Header';\r\nimport Button from '../../../../commonComponents/button/Button';\r\nimport style from './testWithoutHelp.module.css';\r\n\r\nlet options = [\r\n  {\r\n    case: 'Corsair iCUE 7000X',\r\n    motherboard: 'ROG STRIX Z790-F GAMING WIFI',\r\n    cpu: 'i9-12900KF',\r\n    gpu: 'TUF Gaming GeForce RTX 3070 Ti V2 OC Edition 8GB GDDR6X',\r\n    liquid_cpu_cooler: 'H150 RGB 360mm Liquid CPU Cooler',\r\n    psu: 'ROG-STRIX-750G',\r\n    ram: 'Corsair Vengeance 2x32GB DDR5 4800MHz CL40',\r\n    storage: 'Samsung 980 PRO M.2 NVMe 1TB SSD',\r\n    fan: 'none',\r\n  },\r\n  {\r\n    case: 'TUF Gaming GT301',\r\n    motherboard: 'PRIME H610M-D D4',\r\n    cpu: 'i5-13400',\r\n    gpu: 'ASUS TUF GTX 1660 SUPER GAMING OC 6GB GDDR6 DVI HDMI DP',\r\n    fan_cpu_cooler: 'Arctic Alpine 17 CO',\r\n    psu: 'Asus ROG-STRIX 550W GOLD ROG-STRIX-550G',\r\n    ram: 'G.Skill Aegis 2x8GB 2666Mhz DDR4 CL19 Kit',\r\n    storage: 'Kingston NV2 PCIe 4.0 x4 NVMe M.2 2280 1TB SSD',\r\n    fan: 'none',\r\n  }\r\n];\r\n/**\r\n * Description -\r\n */\r\nexport default class TestWithoutHelp extends Component {\r\n  state = {\r\n    testName: '',\r\n    modelCase: '',\r\n    modelMotherboard: '',\r\n    modelCPU: '',\r\n    modelCPUCooler: '',\r\n    modelGPU: '',\r\n    modelPSU: '',\r\n    modelRAM: '',\r\n    modelSSD: '',\r\n    cpuArray: [],\r\n    gpuArray: [],\r\n    caseArray: [],\r\n    cpuCoolerFanArray: [],\r\n    cpuCoolerLiquidArray: [],\r\n    fanArray: [],\r\n    motherboardArray: [],\r\n    psuArray: [],\r\n    ramArray: [],\r\n    ssdM2Array: [],\r\n    ssdSataArray: [],\r\n    showResult: '',\r\n  };\r\n\r\n  /**\r\n   * Description - This function get all models of all components from database\r\n   */\r\n  async getModels() {\r\n    const response = await fetch('http://localhost:5000/getComponentsModels');\r\n    const result = await response.json();\r\n    console.log(result);\r\n    this.setState({ cpuArray: result.Cpu });\r\n    this.setState({ gpuArray: result.Gpu });\r\n    this.setState({ caseArray: result.Case });\r\n    this.setState({ cpuCoolerFanArray: result.CpuCoolerFan });\r\n    this.setState({ cpuCoolerLiquidArray: result.CpuCoolerLiquid });\r\n    this.setState({ motherboardArray: result.Motherboard });\r\n    this.setState({ psuArray: result.Psu });\r\n    this.setState({ ramArray: result.Ram });\r\n    this.setState({ ssdM2Array: result.SsdM2 });\r\n    this.setState({ ssdSataArray: result.SsdSata });\r\n  }\r\n\r\n  /**\r\n   *Description - This Function save the choose assembly in the database\r\n   * @param {*} e - Components selected by the admin\r\n   */\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    let grade = 0;\r\n    let chosenOption = null\r\n    for(let option of options){\r\n      if (this.state.motherboard === option.motherboard) chosenOption = option\r\n    }\r\n    if(chosenOption.case === this.state.modelCase) grade = grade+10\r\n    if (chosenOption.cpu === this.state.modelCPU) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelCPUCooler) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelGPU) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelPSU) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelRAM) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelSSD) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelCase) grade = grade + 10;\r\n    if (chosenOption.case === this.state.modelCase) grade = grade + 10;\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      crossDomain: true,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'Accept-Control-Allow-Origin': '*',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    };\r\n    const response = await fetch(\r\n      'http://localhost:5000/testWithoutHelp',\r\n      options\r\n    );\r\n    const result = await response.json();\r\n    console.log(result);\r\n    if (result.status === 'ok') {\r\n      this.setState({\r\n        showResult: 'The Test has been added',\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showResult: '',\r\n          modelCase: '',\r\n          modelMotherboard: '',\r\n          modelCPU: '',\r\n          modelCPUCooler: '',\r\n          modelGPU: '',\r\n          modelPSU: '',\r\n          modelRAM: '',\r\n          modelSSD: '',\r\n        });\r\n      }, 1000);\r\n    } else if (result.status === 'Test already exist') {\r\n      this.setState({\r\n        showResult: 'This test already  exist',\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   *Description - This function start when the page is upload and activate the function getModels\r\n   */\r\n  componentDidMount() {\r\n    this.getModels();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Test Without Help' />\r\n        <section>\r\n          <form onSubmit={this.handleSubmit.bind(this)} className={style.form}>\r\n            <input\r\n              className={style.input}\r\n              type='text'\r\n              placeholder='Enter Test Name:'\r\n              value={this.state.testName}\r\n              required\r\n              onChange={e => this.setState({ assemblyName: e.target.value })}\r\n            />\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelMotherboard}\r\n              label='MOTHERBOARD'\r\n              onChange={e =>\r\n                this.setState({ modelMotherboard: e.target.value })\r\n              }\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a Motherboard\r\n              </option>\r\n              {this.state.motherboardArray.map(itemMotherboard => {\r\n                return (\r\n                  <option key={itemMotherboard} value={itemMotherboard}>\r\n                    {itemMotherboard}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelCPU}\r\n              label='CPU'\r\n              onChange={e => this.setState({ modelCPU: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a CPU\r\n              </option>\r\n              {this.state.cpuArray.map(itemCpu => {\r\n                return (\r\n                  <option key={itemCpu} value={itemCpu}>\r\n                    {itemCpu}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelCPUCooler}\r\n              label='CPU Cooler'\r\n              onChange={e => this.setState({ modelCPUCooler: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a CPU Cooler\r\n              </option>\r\n              {[\r\n                ...this.state.cpuCoolerFanArray,\r\n                ...this.state.cpuCoolerLiquidArray,\r\n              ].map(itemCpuCooler => {\r\n                return (\r\n                  <option key={itemCpuCooler} value={itemCpuCooler}>\r\n                    {itemCpuCooler}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelGPU}\r\n              label='GPU'\r\n              onChange={e => this.setState({ modelGPU: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a GPU\r\n              </option>\r\n              {this.state.gpuArray.map(itemGpu => {\r\n                return (\r\n                  <option key={itemGpu} value={itemGpu}>\r\n                    {itemGpu}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelPSU}\r\n              label='PSU'\r\n              onChange={e => this.setState({ modelPSU: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a PSU\r\n              </option>\r\n              {this.state.psuArray.map(itemPsu => {\r\n                return (\r\n                  <option key={itemPsu} value={itemPsu}>\r\n                    {itemPsu}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelRAM}\r\n              label='RAM'\r\n              onChange={e => this.setState({ modelRAM: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a RAM\r\n              </option>\r\n              {this.state.ramArray.map(itemRam => {\r\n                return (\r\n                  <option key={itemRam} value={itemRam}>\r\n                    {itemRam}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelSSD}\r\n              label='SSD'\r\n              onChange={e => this.setState({ modelSSD: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a SSD\r\n              </option>\r\n              {[...this.state.ssdM2Array, ...this.state.ssdSataArray].map(\r\n                itemSSD => {\r\n                  return (\r\n                    <option key={itemSSD} value={itemSSD}>\r\n                      {itemSSD}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n            </select>\r\n            <select\r\n              className={style.select}\r\n              value={this.state.modelCase}\r\n              label='CASE'\r\n              onChange={e => this.setState({ modelCase: e.target.value })}\r\n              required\r\n            >\r\n              <option value='' disabled>\r\n                Select a Case\r\n              </option>\r\n              {this.state.caseArray.map(itemCase => {\r\n                return (\r\n                  <option key={itemCase} value={itemCase}>\r\n                    {itemCase}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <Button type='submit' text='submit' />\r\n            <p className={style.showResult}>{this.state.showResult}</p>\r\n          </form>\r\n        </section>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}