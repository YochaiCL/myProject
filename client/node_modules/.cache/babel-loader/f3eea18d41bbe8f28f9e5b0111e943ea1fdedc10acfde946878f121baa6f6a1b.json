{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yocha\\\\OneDrive\\\\Desktop\\\\gitHubProjects\\\\myProject\\\\myProject\\\\client\\\\src\\\\components\\\\adminPages\\\\pages\\\\delete\\\\deleteAssemblies\\\\DeleteAssemblies.js\";\nimport React, { Component } from 'react';\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\nimport Header from '../../../../pageSettings/header/Header';\nimport style from './delteAssemlies.module.css';\nimport Button from '../../../../pageSettings/button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DeleteAssemblies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      assembly: [{\n        assemblyName: 'Loading data...'\n      }],\n      deleteAssembly: ''\n    };\n  }\n  async getAssembly() {\n    const response = await fetch('http://localhost:5000/getAssemblies/assemblies');\n    const result = await response.json();\n    console.log(result);\n    this.setState({\n      assembly: result\n    });\n  }\n  componentDidMount() {\n    this.getAssembly();\n  }\n  deleteAssembly() {\n    try {\n      fetch('http://localhost:5000/deleteAssemblies', {\n        // Setting headers for the HTTP request\n        method: 'POST',\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        // Converting fullName, email, password, and userType to JSON and setting it as the request body\n        body: JSON.stringify({\n          model: this.state.deleteAssembly\n        })\n      })\n      // Parsing the response as JSON\n      .then(res => res.json())\n      // Handling the response data\n      .then(data => {\n        console.log(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        h1Heading: \"Delete Assemblies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: style.select,\n        value: this.state.deleteAssembly,\n        label: \"Assemblies Name\",\n        onChange: e => this.setState({\n          deleteAssembly: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select an Assembly Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), this.state.assembly.map((itemAssembly, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: itemAssembly.assemblyName,\n          children: itemAssembly.assemblyName\n        }, `${itemAssembly.assemblyName}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.btn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Delete\",\n          fun: this.deleteAssembly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","PageLayout","Header","style","Button","DeleteAssemblies","state","assembly","assemblyName","deleteAssembly","getAssembly","response","fetch","result","json","console","log","setState","componentDidMount","method","crossDomain","headers","Accept","body","JSON","stringify","model","then","res","data","error","render","select","e","target","value","map","itemAssembly","index","btn"],"sources":["C:/Users/yocha/OneDrive/Desktop/gitHubProjects/myProject/myProject/client/src/components/adminPages/pages/delete/deleteAssemblies/DeleteAssemblies.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PageLayout from '../../../layouts/pageLayout/PageLayout';\r\nimport Header from '../../../../pageSettings/header/Header';\r\nimport style from './delteAssemlies.module.css';\r\nimport Button from '../../../../pageSettings/button/Button';\r\n\r\nexport default class DeleteAssemblies extends Component {\r\n  state = {\r\n    assembly: [{ assemblyName: 'Loading data...' }],\r\n    deleteAssembly: '',\r\n  };\r\n\r\n  async getAssembly() {\r\n    const response = await fetch(\r\n      'http://localhost:5000/getAssemblies/assemblies'\r\n    );\r\n    const result = await response.json();\r\n    console.log(result);\r\n    this.setState({ assembly: result });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAssembly();\r\n  }\r\n   deleteAssembly(){\r\n    try {\r\n      fetch('http://localhost:5000/deleteAssemblies', {\r\n        // Setting headers for the HTTP request\r\n        method: 'POST',\r\n        crossDomain: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        // Converting fullName, email, password, and userType to JSON and setting it as the request body\r\n        body: JSON.stringify({\r\n          model: this.state.deleteAssembly,\r\n        }),\r\n      })\r\n        // Parsing the response as JSON\r\n        .then(res => res.json())\r\n        // Handling the response data\r\n        .then(data => {\r\n          console.log(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageLayout>\r\n        <Header h1Heading='Delete Assemblies' />\r\n\r\n        <select\r\n          className={style.select}\r\n          value={this.state.deleteAssembly}\r\n          label='Assemblies Name'\r\n          onChange={e => this.setState({ deleteAssembly: e.target.value })}\r\n          required\r\n        >\r\n          <option value='' disabled>\r\n            Select an Assembly Name\r\n          </option>\r\n          {this.state.assembly.map((itemAssembly, index) => (\r\n            <option\r\n              // By combining the assemblyName and index in the key, you create a unique identifier for each option in the select element.\r\n              key={`${itemAssembly.assemblyName}-${index}`}\r\n              value={itemAssembly.assemblyName}\r\n            >\r\n              {itemAssembly.assemblyName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className={style.btn}>\r\n          <Button text='Delete' fun={this.deleteAssembly}/>\r\n        </div>\r\n      </PageLayout>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,MAAM,MAAM,wCAAwC;AAAC;AAE5D,eAAe,MAAMC,gBAAgB,SAASL,SAAS,CAAC;EAAA;IAAA;IAAA,KACtDM,KAAK,GAAG;MACNC,QAAQ,EAAE,CAAC;QAAEC,YAAY,EAAE;MAAkB,CAAC,CAAC;MAC/CC,cAAc,EAAE;IAClB,CAAC;EAAA;EAED,MAAMC,WAAW,GAAG;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDAAgD,CACjD;IACD,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,IAAI,CAACI,QAAQ,CAAC;MAAEV,QAAQ,EAAEM;IAAO,CAAC,CAAC;EACrC;EAEAK,iBAAiB,GAAG;IAClB,IAAI,CAACR,WAAW,EAAE;EACpB;EACCD,cAAc,GAAE;IACf,IAAI;MACFG,KAAK,CAAC,wCAAwC,EAAE;QAC9C;QACAO,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,MAAM,EAAE,kBAAkB;UAC1B,6BAA6B,EAAE;QACjC,CAAC;QACD;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,IAAI,CAACpB,KAAK,CAACG;QACpB,CAAC;MACH,CAAC;MACC;MAAA,CACCkB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACd,IAAI,EAAE;MACvB;MAAA,CACCa,IAAI,CAACE,IAAI,IAAI;QACZd,OAAO,CAACC,GAAG,CAACa,IAAI,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;IACpB;EACF;EAEAC,MAAM,GAAG;IACP,oBACE,QAAC,UAAU;MAAA,wBACT,QAAC,MAAM;QAAC,SAAS,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG,eAExC;QACE,SAAS,EAAE5B,KAAK,CAAC6B,MAAO;QACxB,KAAK,EAAE,IAAI,CAAC1B,KAAK,CAACG,cAAe;QACjC,KAAK,EAAC,iBAAiB;QACvB,QAAQ,EAAEwB,CAAC,IAAI,IAAI,CAAChB,QAAQ,CAAC;UAAER,cAAc,EAAEwB,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC,CAAE;QACjE,QAAQ;QAAA,wBAER;UAAQ,KAAK,EAAC,EAAE;UAAC,QAAQ;UAAA,UAAC;QAE1B;UAAA;UAAA;UAAA;QAAA,QAAS,EACR,IAAI,CAAC7B,KAAK,CAACC,QAAQ,CAAC6B,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBAC3C;UAGE,KAAK,EAAED,YAAY,CAAC7B,YAAa;UAAA,UAEhC6B,YAAY,CAAC7B;QAAY,GAHpB,GAAE6B,YAAY,CAAC7B,YAAa,IAAG8B,KAAM,EAAC;UAAA;UAAA;UAAA;QAAA,QAK/C,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eACT;QAAK,SAAS,EAAEnC,KAAK,CAACoC,GAAI;QAAA,uBACxB,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,GAAG,EAAE,IAAI,CAAC9B;QAAe;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C;IAAA;MAAA;MAAA;MAAA;IAAA,QACK;EAEjB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}